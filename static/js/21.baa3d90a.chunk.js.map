{"version":3,"sources":["../node_modules/lodash-es/_baseDifference.js","../node_modules/lodash-es/isArrayLikeObject.js","../node_modules/lodash-es/without.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedDate.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedExtra.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLike.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedUser.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedContent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js","../node_modules/semantic-ui-react/dist/es/views/Feed/FeedEvent.js","../node_modules/semantic-ui-react/dist/es/views/Feed/Feed.js","../node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionTitle.js","../node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionContent.js","../node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionPanel.js","../node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionAccordion.js","../node_modules/semantic-ui-react/dist/es/modules/Accordion/Accordion.js"],"names":["baseDifference","array","values","iteratee","comparator","index","includes","arrayIncludes","isCommon","length","result","valuesLength","arrayMap","baseUnary","arrayIncludesWith","cacheHas","SetCache","outer","value","computed","valuesIndex","push","isArrayLikeObject","isObjectLike","isArrayLike","without","baseRest","FeedDate","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","FeedExtra","images","text","useKeyOnly","imageElements","_map","image","key","join","createHTMLImage","FeedLike","icon","Icon","create","autoGenerateKey","defaultProps","as","FeedMeta","like","createShorthand","val","FeedUser","FeedSummary","date","user","FeedContent","extraImages","extraText","meta","summary","FeedLabel","FeedEvent","hasContentProp","contentProps","Feed","events","size","eventElements","eventProps","childKey","eventData","_objectWithoutPropertiesLoose","finalKey","Content","Date","Event","Extra","Label","Like","Meta","Summary","User","AccordionTitle","_Component","_this","_len","arguments","args","Array","_key","call","apply","this","concat","handleClick","e","_invoke","_inheritsLoose","prototype","render","_this$props","active","iconValue","_isNil","onClick","Component","AccordionContent","createShorthandFactory","AccordionPanel","handleTitleOverrides","predefinedProps","titleProps","title","Fragment","overrideProps","AccordionAccordion","computeNewIndex","exclusive","activeIndex","state","_includes","_without","handleTitleClick","setState","isIndexActive","_proto","getInitialAutoControlledState","_ref","componentDidMount","process","componentDidUpdate","_this2","panels","panel","onTitleClick","Accordion","fluid","inverted","styled","autoControlledProps","Panel","Title"],"mappings":"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","file":"static/js/21.baa3d90a.chunk.js","sourcesContent":["import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","import baseDifference from './_baseDifference.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nexport default without;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * An event or an event summary can contain a date.\n */\n\nfunction FeedDate(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('date', className);\n  var rest = getUnhandledProps(FeedDate, props);\n  var ElementType = getElementType(FeedDate, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedDate.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedDate.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default FeedDate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A feed can contain an extra content.\n */\n\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n  var classes = cx(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);\n  var rest = getUnhandledProps(FeedExtra, props);\n  var ElementType = getElementType(FeedExtra, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n\n\n  var imageElements = _map(images, function (image, index) {\n    var key = [index, image].join('-');\n    return createHTMLImage(image, {\n      key: key\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, imageElements);\n}\n\nFeedExtra.handledProps = [\"as\", \"children\", \"className\", \"content\", \"images\", \"text\"];\nFeedExtra.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: customPropTypes.every([customPropTypes.disallow(['text']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: PropTypes.bool\n} : {};\nexport default FeedExtra;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A feed can contain a like element.\n */\n\nfunction FeedLike(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon;\n  var classes = cx('like', className);\n  var rest = getUnhandledProps(FeedLike, props);\n  var ElementType = getElementType(FeedLike, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedLike.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\"];\nFeedLike.defaultProps = {\n  as: 'a'\n};\nFeedLike.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for icon. Mutually exclusive with children. */\n  icon: customPropTypes.itemShorthand\n} : {};\nexport default FeedLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\n * A feed can contain a meta.\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A feed can contain a user element.\n */\n\nfunction FeedUser(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('user', className);\n  var rest = getUnhandledProps(FeedUser, props);\n  var ElementType = getElementType(FeedUser, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nFeedUser.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nFeedUser.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nFeedUser.defaultProps = {\n  as: 'a'\n};\nexport default FeedUser;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedUser from './FeedUser';\n/**\n * A feed can contain a summary.\n */\n\nfunction FeedSummary(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      date = props.date,\n      user = props.user;\n  var classes = cx('summary', className);\n  var rest = getUnhandledProps(FeedSummary, props);\n  var ElementType = getElementType(FeedSummary, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedUser, function (val) {\n    return {\n      content: val\n    };\n  }, user, {\n    autoGenerateKey: false\n  }), content && ' ', content, content && ' ', createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedSummary.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"user\"];\nFeedSummary.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedUser. */\n  user: customPropTypes.itemShorthand\n} : {};\nexport default FeedSummary;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedDate from './FeedDate';\nimport FeedExtra from './FeedExtra';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\n\nfunction FeedContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      date = props.date,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(FeedContent, props);\n  var ElementType = getElementType(FeedContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedDate, function (val) {\n    return {\n      content: val\n    };\n  }, date, {\n    autoGenerateKey: false\n  }), createShorthand(FeedSummary, function (val) {\n    return {\n      content: val\n    };\n  }, summary, {\n    autoGenerateKey: false\n  }), content, createShorthand(FeedExtra, function (val) {\n    return {\n      text: true,\n      content: val\n    };\n  }, extraText, {\n    autoGenerateKey: false\n  }), createShorthand(FeedExtra, function (val) {\n    return {\n      images: val\n    };\n  }, extraImages, {\n    autoGenerateKey: false\n  }), createShorthand(FeedMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }));\n}\n\nFeedContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"meta\", \"summary\"];\nFeedContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain a date. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: FeedExtra.propTypes.images,\n\n  /** Shorthand for FeedExtra with text. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createHTMLImage, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An event can contain an image or icon label.\n */\n\nfunction FeedLabel(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      icon = props.icon,\n      image = props.image;\n  var classes = cx('label', className);\n  var rest = getUnhandledProps(FeedLabel, props);\n  var ElementType = getElementType(FeedLabel, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, Icon.create(icon, {\n    autoGenerateKey: false\n  }), createHTMLImage(image));\n}\n\nFeedLabel.handledProps = [\"as\", \"children\", \"className\", \"content\", \"icon\", \"image\"];\nFeedLabel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand\n} : {};\nexport default FeedLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedLabel from './FeedLabel';\n/**\n * A feed contains an event.\n */\n\nfunction FeedEvent(props) {\n  var content = props.content,\n      children = props.children,\n      className = props.className,\n      date = props.date,\n      extraImages = props.extraImages,\n      extraText = props.extraText,\n      image = props.image,\n      icon = props.icon,\n      meta = props.meta,\n      summary = props.summary;\n  var classes = cx('event', className);\n  var rest = getUnhandledProps(FeedEvent, props);\n  var ElementType = getElementType(FeedEvent, props);\n  var hasContentProp = content || date || extraImages || extraText || meta || summary;\n  var contentProps = {\n    content: content,\n    date: date,\n    extraImages: extraImages,\n    extraText: extraText,\n    meta: meta,\n    summary: summary\n  };\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      icon: val\n    };\n  }, icon, {\n    autoGenerateKey: false\n  }), createShorthand(FeedLabel, function (val) {\n    return {\n      image: val\n    };\n  }, image, {\n    autoGenerateKey: false\n  }), hasContentProp && /*#__PURE__*/React.createElement(FeedContent, contentProps), children);\n}\n\nFeedEvent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"date\", \"extraImages\", \"extraText\", \"icon\", \"image\", \"meta\", \"summary\"];\nFeedEvent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for FeedContent. */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedDate. */\n  date: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with images. */\n  extraImages: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedExtra with content. */\n  extraText: customPropTypes.itemShorthand,\n\n  /** An event can contain icon label. */\n  icon: customPropTypes.itemShorthand,\n\n  /** An event can contain image label. */\n  image: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Shorthand for FeedSummary. */\n  summary: customPropTypes.itemShorthand\n} : {};\nexport default FeedEvent;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport _map from \"lodash-es/map\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI } from '../../lib';\nimport FeedContent from './FeedContent';\nimport FeedDate from './FeedDate';\nimport FeedEvent from './FeedEvent';\nimport FeedExtra from './FeedExtra';\nimport FeedLabel from './FeedLabel';\nimport FeedLike from './FeedLike';\nimport FeedMeta from './FeedMeta';\nimport FeedSummary from './FeedSummary';\nimport FeedUser from './FeedUser';\n/**\n * A feed presents user activity chronologically.\n */\n\nfunction Feed(props) {\n  var children = props.children,\n      className = props.className,\n      events = props.events,\n      size = props.size;\n  var classes = cx('ui', size, 'feed', className);\n  var rest = getUnhandledProps(Feed, props);\n  var ElementType = getElementType(Feed, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var eventElements = _map(events, function (eventProps) {\n    var childKey = eventProps.childKey,\n        date = eventProps.date,\n        meta = eventProps.meta,\n        summary = eventProps.summary,\n        eventData = _objectWithoutPropertiesLoose(eventProps, [\"childKey\", \"date\", \"meta\", \"summary\"]);\n\n    var finalKey = childKey != null ? childKey : [date, meta, summary].join('-');\n    return /*#__PURE__*/React.createElement(FeedEvent, _extends({\n      date: date,\n      key: finalKey,\n      meta: meta,\n      summary: summary\n    }, eventData));\n  });\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), eventElements);\n}\n\nFeed.handledProps = [\"as\", \"children\", \"className\", \"events\", \"size\"];\nFeed.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand array of props for FeedEvent. */\n  events: customPropTypes.collectionShorthand,\n\n  /** A feed can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))\n} : {};\nFeed.Content = FeedContent;\nFeed.Date = FeedDate;\nFeed.Event = FeedEvent;\nFeed.Extra = FeedExtra;\nFeed.Label = FeedLabel;\nFeed.Like = FeedLike;\nFeed.Meta = FeedMeta;\nFeed.Summary = FeedSummary;\nFeed.User = FeedUser;\nexport default Feed;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isNil from \"lodash-es/isNil\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A title sub-component for Accordion component.\n */\n\nvar AccordionTitle = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionTitle, _Component);\n\n  function AccordionTitle() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      return _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionTitle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        icon = _this$props.icon;\n    var classes = cx(useKeyOnly(active, 'active'), 'title', className);\n    var rest = getUnhandledProps(AccordionTitle, this.props);\n    var ElementType = getElementType(AccordionTitle, this.props);\n    var iconValue = _isNil(icon) ? 'dropdown' : icon;\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick\n      }), children);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick\n    }), Icon.create(iconValue, {\n      autoGenerateKey: false\n    }), content);\n  };\n\n  return AccordionTitle;\n}(Component);\n\nAccordionTitle.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"icon\", \"index\", \"onClick\"];\nexport { AccordionTitle as default };\nAccordionTitle.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand,\n\n  /** AccordionTitle index inside Accordion. */\n  index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Called on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func\n} : {};\nAccordionTitle.create = createShorthandFactory(AccordionTitle, function (content) {\n  return {\n    content: content\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A content sub-component for Accordion component.\n */\n\nfunction AccordionContent(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', useKeyOnly(active, 'active'), className);\n  var rest = getUnhandledProps(AccordionContent, props);\n  var ElementType = getElementType(AccordionContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nAccordionContent.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\"];\nAccordionContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not the content is visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nAccordionContent.create = createShorthandFactory(AccordionContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default AccordionContent;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _invoke from \"lodash-es/invoke\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { createShorthandFactory, customPropTypes } from '../../lib';\nimport AccordionTitle from './AccordionTitle';\nimport AccordionContent from './AccordionContent';\n/**\n * A panel sub-component for Accordion component.\n */\n\nvar AccordionPanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleTitleOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, titleProps) {\n          _invoke(predefinedProps, 'onClick', e, titleProps);\n\n          _invoke(_this.props, 'onTitleClick', e, titleProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionPanel.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        content = _this$props.content,\n        index = _this$props.index,\n        title = _this$props.title;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, AccordionTitle.create(title, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active,\n        index: index\n      },\n      overrideProps: this.handleTitleOverrides\n    }), AccordionContent.create(content, {\n      autoGenerateKey: false,\n      defaultProps: {\n        active: active\n      }\n    }));\n  };\n\n  return AccordionPanel;\n}(Component);\n\nAccordionPanel.handledProps = [\"active\", \"content\", \"index\", \"onTitleClick\", \"title\"];\nAccordionPanel.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Whether or not the title is in the open state. */\n  active: PropTypes.bool,\n\n  /** A shorthand for Accordion.Content. */\n  content: customPropTypes.itemShorthand,\n\n  /** A panel index. */\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: PropTypes.func,\n\n  /** A shorthand for Accordion.Title. */\n  title: customPropTypes.itemShorthand\n} : {};\nAccordionPanel.create = createShorthandFactory(AccordionPanel, null);\nexport default AccordionPanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport _without from \"lodash-es/without\";\nimport _includes from \"lodash-es/includes\";\nimport _isArray from \"lodash-es/isArray\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport AccordionPanel from './AccordionPanel';\n\nvar warnIfPropsAreInvalid = function warnIfPropsAreInvalid(props, state) {\n  var exclusive = props.exclusive;\n  var activeIndex = state.activeIndex;\n  /* eslint-disable no-console */\n\n  if (exclusive && typeof activeIndex !== 'number') {\n    console.error('`activeIndex` must be a number if `exclusive` is true');\n  } else if (!exclusive && !_isArray(activeIndex)) {\n    console.error('`activeIndex` must be an array if `exclusive` is false');\n  }\n  /* eslint-enable no-console */\n\n};\n/**\n * An Accordion can contain sub-accordions.\n */\n\n\nvar AccordionAccordion = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(AccordionAccordion, _Component);\n\n  function AccordionAccordion() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.computeNewIndex = function (index) {\n      var exclusive = _this.props.exclusive;\n      var activeIndex = _this.state.activeIndex;\n      if (exclusive) return index === activeIndex ? -1 : index; // check to see if index is in array, and remove it, if not then add it\n\n      return _includes(activeIndex, index) ? _without(activeIndex, index) : [].concat(activeIndex, [index]);\n    };\n\n    _this.handleTitleClick = function (e, titleProps) {\n      var index = titleProps.index;\n\n      _this.setState({\n        activeIndex: _this.computeNewIndex(index)\n      });\n\n      _invoke(_this.props, 'onTitleClick', e, titleProps);\n    };\n\n    _this.isIndexActive = function (index) {\n      var exclusive = _this.props.exclusive;\n      var activeIndex = _this.state.activeIndex;\n      return exclusive ? activeIndex === index : _includes(activeIndex, index);\n    };\n\n    return _this;\n  }\n\n  var _proto = AccordionAccordion.prototype;\n\n  _proto.getInitialAutoControlledState = function getInitialAutoControlledState(_ref) {\n    var exclusive = _ref.exclusive;\n    return {\n      activeIndex: exclusive ? -1 : []\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (process.env.NODE_ENV !== 'production') {\n      warnIfPropsAreInvalid(this.props, this.state);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (process.env.NODE_ENV !== 'production') {\n      warnIfPropsAreInvalid(this.props, this.state);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        panels = _this$props.panels;\n    var classes = cx('accordion', className);\n    var rest = getUnhandledProps(AccordionAccordion, this.props);\n    var ElementType = getElementType(AccordionAccordion, this.props);\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? _map(panels, function (panel, index) {\n      return AccordionPanel.create(panel, {\n        defaultProps: {\n          active: _this2.isIndexActive(index),\n          index: index,\n          onTitleClick: _this2.handleTitleClick\n        }\n      });\n    }) : children);\n  };\n\n  return AccordionAccordion;\n}(Component);\n\nAccordionAccordion.handledProps = [\"activeIndex\", \"as\", \"children\", \"className\", \"defaultActiveIndex\", \"exclusive\", \"onTitleClick\", \"panels\"];\nexport { AccordionAccordion as default };\nAccordionAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Index of the currently active panel. */\n  activeIndex: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number])]),\n\n  /** Only allow one panel open at a time. */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Called when a panel title is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onTitleClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** Shorthand array of props for Accordion. */\n  panels: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.arrayOf(PropTypes.shape({\n    content: customPropTypes.itemShorthand,\n    title: customPropTypes.itemShorthand\n  }))])\n} : {};\nAccordionAccordion.defaultProps = {\n  exclusive: true\n};\nAccordionAccordion.autoControlledProps = ['activeIndex'];\nAccordionAccordion.create = createShorthandFactory(AccordionAccordion, function (content) {\n  return {\n    content: content\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionPanel from './AccordionPanel';\nimport AccordionTitle from './AccordionTitle';\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\n\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n  return /*#__PURE__*/React.createElement(AccordionAccordion, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nAccordion.handledProps = [\"className\", \"fluid\", \"inverted\", \"styled\"];\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Panel = AccordionPanel;\nAccordion.Title = AccordionTitle;\nexport default Accordion;"],"sourceRoot":""}