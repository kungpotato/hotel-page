{"version":3,"sources":["components/Card.tsx","libs/web3.ts","libs/metamask.ts","pages/Expore.tsx"],"names":["Image","styled","img","Header","Card","whiteSpace","overflow","textOverflow","Meta","Price","Description","p","color","textAlign","CardItem","data","isForSale","image","price","name","description","owner","isAuthenticated","useMoralis","dispatch","useAppDispatch","useContractJson","potatoMarketContract","NFTContract","handleClick","a","getEtherContract","config","marketContractAddress","marketContract","ethers","utils","formatUnits","createMarketSale","nftContractAddress","itemId","value","toString","gasLimit","gasPrice","wait","loadNFTs","then","setNFTs","loadMyNFTs","setMyNFTs","style","height","width","onClick","src","loading","Content","extra","display","justifyContent","alignItems","size","background","padding","icon","defaultRating","maxRating","contractEvent","getWeb3Provider","window","ethereum","Web3","getChainId","provider","eth","net","getId","getMetamask","request","method","accounts","getMetamaskAccount","console","log","chainChanged","callback","on","parseInt","accountChanged","Expore","nfts","useAppSelector","state","expore","screenWidth","useScreenSize","maxWidth","useState","showSidebar","setShowSidebar","isWeb3Enabled","activeIndex","setActiveIndex","getNFTsData","useCallback","useEffect","id","CustomGrid","Grid","CustomFeed","Feed","handleShowSidebar","Pushable","borderRight","animation","direction","visible","inverted","borderRadius","Item","borderBottom","vertical","Menu","Column","mobile","paddingRight","fluid","labelPosition","type","placeholder","basic","margin","paddingLeft","marginLeft","as","Title","marginBottom","active","index","fontSize","content","Event","Label","lineHeight","Summary","Date","Pusher","pointing","secondary","map","e","i","tablet","largeScreen","computer"],"mappings":"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","file":"static/js/14.cdb15c20.chunk.js","sourcesContent":["import { getEtherContract } from '../libs/ethereum'\nimport { PotatoMarketInstance } from '../../types/truffle-contracts'\nimport { ethers } from 'ethers'\nimport { INFTItem, setMyNFTs, setNFTs } from '../states/expore/reducer'\nimport { loadMyNFTs, loadNFTs } from '../services'\nimport { useAppDispatch } from '../states/hooks'\nimport { config } from '../config'\nimport { useContractJson } from '../hooks/contracts'\nimport { Button, Card, Icon, Rating } from 'semantic-ui-react'\nimport styled from '@emotion/styled'\nimport { useMoralis } from 'react-moralis'\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 14em;\n  border-radius: inherit;\n  object-fit: cover;\n`\n\nconst Header = styled(Card.Header)({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n})\n\nconst Meta = styled(Card.Meta)({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n})\n\nconst Description = styled(Card.Description)({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis'\n})\n\nconst Price = styled.p({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: '#2185d0',\n  textAlign: 'right'\n})\n\ninterface ICardItem {\n  data: INFTItem\n  isForSale?: boolean\n}\n\nexport const CardItem = ({ data, isForSale = true }: ICardItem) => {\n  const { image, price, description, name, owner } = data\n  const { isAuthenticated } = useMoralis()\n\n  const dispatch = useAppDispatch()\n  const { potatoMarketContract, NFTContract } = useContractJson()\n\n  const handleClick = async () => {\n    if (potatoMarketContract && NFTContract) {\n      const marketContract = (await getEtherContract(\n        potatoMarketContract,\n        config.marketContractAddress\n      )) as unknown as PotatoMarketInstance\n      // const ntfContract = (await getEtherContract(NFT)) as unknown as NFTInstance\n      const price = ethers.utils.formatUnits(data.price, 'wei')\n\n      const createMarketSale = await marketContract.createMarketSale(config.nftContractAddress, data.itemId, {\n        value: price.toString(),\n        gasLimit: '6721975',\n        gasPrice: '20000000000'\n      })\n      await (createMarketSale as any).wait()\n      if (isForSale) {\n        loadNFTs(potatoMarketContract, NFTContract, isAuthenticated).then((data) => {\n          dispatch(setNFTs(data))\n        })\n        loadMyNFTs(potatoMarketContract, NFTContract).then((data) => {\n          dispatch(setMyNFTs(data))\n        })\n      }\n    }\n  }\n\n  return (\n    <Card style={{ height: '23em', width: '100%' }} onClick={() => false}>\n      <Image src={image} loading=\"lazy\" />\n      <Card.Content style={{ height: '1em' }}>\n        <Header>{name}</Header>\n        <Meta>{owner}</Meta>\n        <Price>\n          <Icon name=\"ethereum\" />\n          {price}\n        </Price>\n      </Card.Content>\n      <Card.Content extra>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Button\n            color=\"green\"\n            size=\"small\"\n            onClick={handleClick}\n            style={{ background: '#0000', color: 'green', padding: '0' }}\n          >\n            Buy now\n          </Button>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <span style={{ color: '#00000026', textAlign: 'right' }}>0</span>\n            <Rating icon=\"heart\" defaultRating={0} maxRating={1} />\n          </div>\n        </div>\n      </Card.Content>\n    </Card>\n  )\n}\n","import { Contract, ContractSendMethod, DeployOptions, EventData } from 'web3-eth-contract'\nimport Web3 from 'web3'\n\nexport enum contractEvent {\n  Log = 'Log'\n}\n\nexport const getWeb3Provider = async (): Promise<Web3 | null> => {\n  if (typeof window.ethereum !== 'undefined') {\n    const { ethereum } = window\n    return new Web3(ethereum as any)\n  }\n  return null\n}\n\nexport const getChainId = async (): Promise<number | undefined> => {\n  const provider = await getWeb3Provider()\n  return provider?.eth.net.getId()\n}\n\nexport const getWeb3Contract = async (\n  contractDefinition: Record<string, any>,\n  address: string\n): Promise<Contract | null> => {\n  const provider = await getWeb3Provider()\n  const networkId = await getChainId()\n  console.log({ networkId })\n\n  if (provider && networkId) {\n    const contract = new provider.eth.Contract(contractDefinition['abi'], address)\n    return contract\n  }\n  return null\n}\n\nexport const getContractEvent = (contract: Contract, event: contractEvent): Promise<EventData[]> => {\n  const options = {\n    filter: {\n      value: []\n    },\n    fromBlock: 0, //Number || \"earliest\" || \"pending\" || \"latest\"\n    toBlock: 'latest'\n  }\n  return contract.getPastEvents(event, options)\n}\n\nexport const deployContract = (contract: Contract): ContractSendMethod => {\n  const options: DeployOptions = {\n    data: '',\n    arguments: []\n  }\n  return contract.deploy(options)\n}\n","import { getChainId } from './web3'\n\ndeclare global {\n  interface Window {\n    ethereum?: EthereumProvider\n  }\n}\n\ninterface RequestArguments {\n  method: 'eth_requestAccounts' | 'chainChanged' | 'accountsChanged'\n  params?: unknown[] | Record<string, unknown>\n}\n\ninterface ConnectInfo {\n  chainId: string\n}\n\ntype eventMap = {\n  chainChanged: string\n  connect: ConnectInfo\n  accountsChanged: string[]\n}\n\ntype eventResult<T extends keyof eventMap> = T extends string ? string | string[] : ConnectInfo\n\nexport interface EthereumProvider {\n  request(args: RequestArguments): Promise<string[]>\n  on: <T extends keyof eventMap>(event: keyof eventMap, handler: (data: eventResult<T>) => void) => void\n}\n\nconst getMetamask = async (): Promise<string[]> => {\n  if (typeof window.ethereum !== 'undefined') {\n    const { ethereum } = window\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\n    return accounts\n  }\n  return []\n}\n\nexport const getMetamaskAccount = async () => {\n  const accounts = await getMetamask()\n\n  const chainId = await getChainId()\n\n  if (chainId !== 1337) {\n    console.log('incurrect chain')\n  }\n\n  return accounts\n}\n\nexport const chainChanged = (callback?: (chainId: number) => void): void => {\n  if (typeof window.ethereum !== 'undefined') {\n    const { ethereum } = window\n    ethereum.on('chainChanged', (data) => {\n      if (callback) callback(parseInt(data as any, 16))\n    })\n  }\n}\n\nexport const accountChanged = (callback?: (ac: string[]) => void): void => {\n  if (typeof window.ethereum !== 'undefined') {\n    const { ethereum } = window\n    ethereum.on('accountsChanged', (accounts) => {\n      if (callback) callback(accounts as any)\n    })\n  }\n}\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useMoralis } from 'react-moralis'\nimport {\n  Accordion,\n  Button,\n  Card,\n  Divider,\n  Feed,\n  Grid,\n  Icon,\n  Input,\n  Label,\n  Menu,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react'\nimport { CardItem } from '../components/Card'\nimport { useContractJson } from '../hooks/contracts'\nimport { useScreenSize } from '../hooks/screenSize'\nimport { chainChanged } from '../libs/metamask'\nimport { loadNFTs } from '../services'\nimport { setNFTs } from '../states/expore/reducer'\nimport { useAppDispatch, useAppSelector } from '../states/hooks'\n\nconst Expore: React.FC = () => {\n  const { nfts } = useAppSelector((state) => state.expore)\n  const dispatch = useAppDispatch()\n  const { potatoMarketContract, NFTContract } = useContractJson()\n  const screenWidth = useScreenSize({ maxWidth: 1500 })\n  const [showSidebar, setShowSidebar] = useState<boolean>(true)\n  const { isWeb3Enabled } = useMoralis()\n  const [activeIndex, setActiveIndex] = useState<boolean>(true)\n\n  const getNFTsData = useCallback(() => {\n    console.log({ isWeb3Enabled })\n    if (potatoMarketContract && NFTContract) {\n      loadNFTs(potatoMarketContract, NFTContract, isWeb3Enabled).then((data) => {\n        dispatch(setNFTs(data))\n      })\n    }\n  }, [potatoMarketContract, NFTContract])\n\n  useEffect(() => {\n    getNFTsData()\n  }, [getNFTsData])\n\n  chainChanged(async (id) => {\n    if (id !== 1337) {\n      console.log('incurrect chain')\n      dispatch(setNFTs([]))\n    } else {\n      getNFTsData()\n    }\n  })\n\n  const CustomGrid = Grid as any\n  const CustomFeed = Feed as any\n\n  const handleShowSidebar = () => {\n    setShowSidebar(!showSidebar)\n  }\n\n  const expandCollection = () => {\n    console.log('....')\n    setActiveIndex(!activeIndex)\n  }\n\n  {\n    console.log('////', activeIndex)\n  }\n  return (\n    <Fragment>\n      <Sidebar.Pushable style={{ height: 'calc(100vh - 108px)' }}>\n        <Sidebar\n          width={showSidebar && !screenWidth ? 'wide' : 'very thin'}\n          style={{ borderRight: '0.4px solid #ffffff1a', background: '#1b1c1d' }}\n          animation=\"push\"\n          direction=\"left\"\n          visible={true}\n        >\n          {!showSidebar || screenWidth ? (\n            <Menu inverted style={{ borderRadius: '0' }}>\n              <Menu.Item\n                onClick={handleShowSidebar}\n                style={{\n                  width: '100%',\n                  justifyContent: 'center',\n                  display: 'flex',\n                  borderBottom: '1px solid #ffffff1a',\n                  height: '52px'\n                }}\n              >\n                <Icon name=\"filter\" />\n              </Menu.Item>\n            </Menu>\n          ) : (\n            <Menu inverted vertical size=\"massive\" style={{ borderRadius: '0' }}>\n              <Menu.Item\n                name=\"inbox\"\n                // active={activeItem === 'inbox'}\n                onClick={handleShowSidebar}\n              >\n                Filter\n                <Icon name=\"angle left\" />\n              </Menu.Item>\n              <Menu.Item\n                name=\"inbox\"\n                // active={activeItem === 'inbox'}\n                // onClick={this.handleItemClick}\n              >\n                <Menu.Header>Price</Menu.Header>\n                <Menu.Menu>\n                  <Menu.Item>\n                    <CustomGrid>\n                      <Grid.Column mobile={7} style={{ paddingRight: '0' }}>\n                        <Input fluid={true} labelPosition=\"left\" type=\"text\" placeholder=\"Min\">\n                          <Label basic>\n                            <Icon style={{ margin: 'auto' }} name=\"ethereum\" />\n                          </Label>\n                          <input />\n                        </Input>\n                      </Grid.Column>\n                      <Grid.Column mobile={2}>\n                        <div style={{ display: 'flex', alignItems: 'center', height: '100%' }}>to</div>\n                      </Grid.Column>\n                      <Grid.Column mobile={7} style={{ paddingLeft: '0' }}>\n                        <Input fluid={true} type=\"text\" placeholder=\"Max\">\n                          <input />\n                        </Input>\n                      </Grid.Column>\n                      <Grid.Column mobile={16}>\n                        <Button color=\"blue\" style={{ marginLeft: 'auto', display: 'block' }}>\n                          Apply\n                        </Button>\n                      </Grid.Column>\n                    </CustomGrid>\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu.Item>\n              <Divider />\n              <Accordion as={Menu} vertical inverted fluid={true}>\n                <Menu.Item style={{ width: '100%' }}>\n                  <Accordion.Title\n                    style={{ marginBottom: '9px' }}\n                    active={activeIndex}\n                    index={0}\n                    onClick={expandCollection}\n                  >\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                      <h6 style={{ fontSize: '18px', margin: '0' }}>Collection</h6>\n                      <Icon name=\"angle down\" />\n                    </div>\n                  </Accordion.Title>\n                  <Accordion.Content\n                    active={activeIndex}\n                    content={\n                      <Fragment>\n                        <Card fluid style={{ background: 'var(--darg-bg)' }}>\n                          <Card.Content style={{ padding: '6px 6px' }}>\n                            <CustomFeed>\n                              <Feed.Event>\n                                <Feed.Label\n                                  style={{ margin: 'auto' }}\n                                  image=\"https://ipfs.moralis.io:2053/ipfs/Qmedfv8e95sqnNQ2Ks7w9pQUja2JCiuJqpxp8tFRXwbfjz\"\n                                />\n                                <Feed.Content style={{ lineHeight: '1.8em' }}>\n                                  <Feed.Summary style={{ color: '#fff' }}>\n                                    Takashiro\n                                    <Icon name=\"check circle\" color=\"blue\" />\n                                  </Feed.Summary>\n                                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Feed.Date style={{ color: '#ffffffb3' }} content=\"1 day ago\" />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                      <Icon name=\"ethereum\" size=\"small\" />\n                                      <Feed.Date style={{ color: '#21ba45', height: '100%' }} content=\"2.00\" />\n                                    </div>\n                                  </div>\n                                </Feed.Content>\n                              </Feed.Event>\n                            </CustomFeed>\n                          </Card.Content>\n                        </Card>\n                        <Card fluid style={{ background: 'var(--darg-bg)' }}>\n                          <Card.Content style={{ padding: '6px 6px' }}>\n                            <CustomFeed>\n                              <Feed.Event>\n                                <Feed.Label\n                                  style={{ margin: 'auto' }}\n                                  image=\"https://ipfs.moralis.io:2053/ipfs/Qmedfv8e95sqnNQ2Ks7w9pQUja2JCiuJqpxp8tFRXwbfjz\"\n                                />\n                                <Feed.Content style={{ lineHeight: '1.8em' }}>\n                                  <Feed.Summary style={{ color: '#fff' }}>\n                                    Takashiro\n                                    <Icon name=\"check circle\" color=\"blue\" />\n                                  </Feed.Summary>\n                                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Feed.Date style={{ color: '#ffffffb3' }} content=\"1 day ago\" />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                      <Icon name=\"ethereum\" size=\"small\" />\n                                      <Feed.Date style={{ color: '#21ba45', height: '100%' }} content=\"2.00\" />\n                                    </div>\n                                  </div>\n                                </Feed.Content>\n                              </Feed.Event>\n                            </CustomFeed>\n                          </Card.Content>\n                        </Card>\n                        <Card fluid style={{ background: 'var(--darg-bg)' }}>\n                          <Card.Content style={{ padding: '6px 6px' }}>\n                            <CustomFeed>\n                              <Feed.Event>\n                                <Feed.Label\n                                  style={{ margin: 'auto' }}\n                                  image=\"https://ipfs.moralis.io:2053/ipfs/Qmedfv8e95sqnNQ2Ks7w9pQUja2JCiuJqpxp8tFRXwbfjz\"\n                                />\n                                <Feed.Content style={{ lineHeight: '1.8em' }}>\n                                  <Feed.Summary style={{ color: '#fff' }}>\n                                    Takashiro\n                                    <Icon name=\"check circle\" color=\"blue\" />\n                                  </Feed.Summary>\n                                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Feed.Date style={{ color: '#ffffffb3' }} content=\"1 day ago\" />\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                                      <Icon name=\"ethereum\" size=\"small\" />\n                                      <Feed.Date style={{ color: '#21ba45', height: '100%' }} content=\"2.00\" />\n                                    </div>\n                                  </div>\n                                </Feed.Content>\n                              </Feed.Event>\n                            </CustomFeed>\n                          </Card.Content>\n                        </Card>\n                      </Fragment>\n                    }\n                  />\n                </Menu.Item>\n              </Accordion>\n            </Menu>\n          )}\n        </Sidebar>\n        <Sidebar.Pusher>\n          <Fragment>\n            <Menu\n              pointing\n              inverted\n              secondary\n              size=\"massive\"\n              style={{ borderBottom: '1px solid #ffffff1a', borderRadius: '0' }}\n            >\n              <Menu.Item style={{ borderRadius: '0' }} active={true}>\n                Items\n              </Menu.Item>\n              <Menu.Item style={{ borderRadius: '0', height: '52px' }} active={false}>\n                Activity\n              </Menu.Item>\n            </Menu>\n            <div style={{ padding: '8px' }}>\n              <CustomGrid style={{ width: showSidebar && !screenWidth ? 'calc(100vw - 350px)' : 'calc(100vw - 60px)' }}>\n                {nfts.map((e, i) => (\n                  <Grid.Column mobile={8} tablet={5} largeScreen={4} computer={2}>\n                    <CardItem data={e} />\n                  </Grid.Column>\n                ))}\n              </CustomGrid>\n            </div>\n          </Fragment>\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </Fragment>\n  )\n}\n\nexport default Expore\n"],"sourceRoot":""}