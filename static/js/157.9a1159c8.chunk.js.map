{"version":3,"file":"static/js/157.9a1159c8.chunk.js","mappings":"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","sources":["modules/register/SteperRegister.tsx","modules/register/TermAndConditionDialog.tsx","pages/auth/RegisterPage.tsx"],"sourcesContent":["import { Box, Button } from '@mui/material'\r\nimport Step from '@mui/material/Step'\r\nimport StepLabel from '@mui/material/StepLabel'\r\nimport Stepper from '@mui/material/Stepper'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { ReactNode, useState } from 'react'\r\n\r\ninterface IStepperRegister {\r\n  step1: JSX.Element\r\n  step2: JSX.Element\r\n  step3: JSX.Element\r\n  onSubmit?: () => void\r\n  isValid?: boolean\r\n  onNext?: (i: number) => void\r\n  onBack?: (i: number) => void\r\n}\r\n\r\nexport function StepperRegister({\r\n  step1,\r\n  step2,\r\n  step3,\r\n  onSubmit,\r\n  isValid,\r\n  onNext,\r\n  onBack\r\n}: IStepperRegister) {\r\n  const steps: { title: string; component: JSX.Element }[] = [\r\n    { title: 'ประเภทบัญชี', component: step1 },\r\n    { title: 'ข้อมูลผู้ใช้', component: step2 },\r\n    { title: 'เอกสารเพิ่มเติม', component: step3 }\r\n  ]\r\n\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const theme = useTheme()\r\n\r\n  const handleNext = () => {\r\n    if (activeStep <= steps.length && isValid) {\r\n      setActiveStep((prevActiveStep) => {\r\n        if (onNext) {\r\n          onNext(prevActiveStep + 1)\r\n        }\r\n        return prevActiveStep + 1\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => {\r\n      if (onBack) {\r\n        onBack(prevActiveStep - 1)\r\n      }\r\n      return prevActiveStep - 1\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((e, index) => {\r\n          const stepProps: { completed?: boolean } = {}\r\n          const labelProps: {\r\n            optional?: ReactNode\r\n          } = {}\r\n          return (\r\n            <Step\r\n              key={index}\r\n              {...stepProps}\r\n              sx={{\r\n                '& .css-1gjpaj2-MuiSvgIcon-root-MuiStepIcon-root.Mui-active': {\r\n                  color: theme.palette.secondary.main\r\n                },\r\n                '& .css-1gjpaj2-MuiSvgIcon-root-MuiStepIcon-root.Mui-completed':\r\n                {\r\n                  color: theme.palette.primary.dark\r\n                }\r\n              }}\r\n            >\r\n              <StepLabel {...labelProps}>{e.title}</StepLabel>\r\n            </Step>\r\n          )\r\n        })}\r\n      </Stepper>\r\n      <Box pb={6}>\r\n        <Box margin='auto' p={4}>{steps[activeStep].component}</Box>\r\n        <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Back\r\n          </Button>\r\n          {activeStep === steps.length - 1 ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                if (isValid) {\r\n                  onSubmit && onSubmit()\r\n                }\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={handleNext} color=\"secondary\" variant=\"contained\">\r\n              Next\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Checkbox, FormControlLabel } from '@mui/material'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport { makeStyles } from '@mui/styles'\nimport { signOut } from 'firebase/auth'\nimport { Fragment, useState } from 'react'\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener'\nimport { useNavigate } from 'react-router-dom'\nimport { auth } from '../../lib/fbConnect'\n\nconst useStyles = makeStyles(() => ({\n  backDrop: {\n    backdropFilter: 'blur(30px)',\n    backgroundColor: 'rgba(0,0,30,0.4)'\n  }\n}))\n\nexport default function TermAndConditionDialog({\n  open,\n  onClose\n}: {\n  open: boolean\n  onClose: () => void\n}) {\n  const classes = useStyles()\n  const navigate = useNavigate()\n  const [bottom, setButtom] = useState<boolean>(false)\n  const [accept, setAccept] = useState<boolean>(false)\n\n  const handleOnDocumentBottom = () => {\n    setButtom(true)\n  }\n\n  const handleAccept = () => {\n    localStorage.setItem('acceptCondition', 'accepted')\n    onClose()\n  }\n\n  const handleReject = async () => {\n    await signOut(auth)\n    navigate('/')\n  }\n\n  const scrollRef = useBottomScrollListener(handleOnDocumentBottom)\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        scroll={'paper'}\n        BackdropProps={{\n          classes: {\n            root: classes.backDrop\n          }\n        }}\n      >\n        <DialogTitle id=\"scroll-dialog-title\">ข้อตกลงการใช้งาน</DialogTitle>\n        <DialogContent dividers ref={scrollRef as any}>\n          <DialogContentText tabIndex={-1}>\n            <Fragment>\n              The standard Lorem Ipsum passage, used since the 1500s \"Lorem\n              ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n              tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n              minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n              Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by\n              Cicero in 45 BC \"Sed ut perspiciatis unde omnis iste natus error\n              sit voluptatem accusantium doloremque laudantium, totam rem\n              aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n              architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam\n              voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed\n              quia consequuntur magni dolores eos qui ratione voluptatem sequi\n              nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor\n              sit amet, consectetur, adipisci velit, sed quia non numquam eius\n              modi tempora incidunt ut labore et dolore magnam aliquam quaerat\n              voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem\n              ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi\n              consequatur? Quis autem vel eum iure reprehenderit qui in ea\n              voluptate velit esse quam nihil molestiae consequatur, vel illum\n              qui dolorem eum fugiat quo voluptas nulla pariatur?\" 1914\n              translation by H. Rackham \"But I must explain to you how all this\n              mistaken idea of denouncing pleasure and praising pain was born\n              and I will give you a complete account of the system, and expound\n              the actual teachings of the great explorer of the truth, the\n              master-builder of human happiness. No one rejects, dislikes, or\n              avoids pleasure itself, because it is pleasure, but because those\n              who do not know how to pursue pleasure rationally encounter\n              consequences that are extremely painful. Nor again is there anyone\n              who loves or pursues or desires to obtain pain of itself, because\n              it is pain, but because occasionally circumstances occur in which\n              toil and pain can procure him some great pleasure. To take a\n              trivial example, which of us ever undertakes laborious physical\n              exercise, except to obtain some advantage from it? But who has any\n              right to find fault with a man who chooses to enjoy a pleasure\n              that has no annoying consequences, or one who avoids a pain that\n              produces no resultant pleasure?\" Section 1.10.33 of \"de Finibus\n              Bonorum et Malorum\", written by Cicero in 45 BC \"At vero eos et\n              accusamus et iusto odio dignissimos ducimus qui blanditiis\n              praesentium voluptatum deleniti atque corrupti quos dolores et\n              quas molestias excepturi sint occaecati cupiditate non provident,\n              similique sunt in culpa qui officia deserunt mollitia animi, id\n              est laborum et dolorum fuga. Et harum quidem rerum facilis est et\n              expedita distinctio. Nam libero tempore, cum soluta nobis est\n              eligendi optio cumque nihil impedit quo minus id quod maxime\n              placeat facere possimus, omnis voluptas assumenda est, omnis dolor\n              repellendus. Temporibus autem quibusdam et aut officiis debitis\n              aut rerum necessitatibus saepe eveniet ut et voluptates\n              repudiandae sint et molestiae non recusandae. Itaque earum rerum\n              hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus\n              maiores alias consequatur aut perferendis doloribus asperiores\n              repellat.\" 1914 translation by H. Rackham \"On the other hand, we\n              denounce with righteous indignation and dislike men who are so\n              beguiled and demoralized by the charms of pleasure of the moment,\n              so blinded by desire, that they cannot foresee the pain and\n              trouble that are bound to ensue; and equal blame belongs to those\n              who fail in their duty through weakness of will, which is the same\n              as saying through shrinking from toil and pain. These cases are\n              perfectly simple and easy to distinguish. In a free hour, when our\n              power of choice is untrammelled and when nothing prevents our\n              being able to do what we like best, every pleasure is to be\n              welcomed and every pain avoided. But in certain circumstances and\n              owing to the claims of duty or the obligations of business it will\n              frequently occur that pleasures have to be repudiated and\n              annoyances accepted. The wise man therefore always holds in these\n              matters to this principle of selection: he rejects pleasures to\n              secure other greater pleasures, or else he endures pains to avoid\n              worse pains.\" The standard Lorem Ipsum passage, used since the\n              1500s \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n              sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n              Section 1.10.32 of \"de Finibus Bonorum et Malorum\", written by\n              Cicero in 45 BC \"Sed ut perspiciatis unde omnis iste natus error\n              sit voluptatem accusantium doloremque laudantium, totam rem\n              aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n              architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam\n              voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed\n              quia consequuntur magni dolores eos qui ratione voluptatem sequi\n              nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor\n              sit amet, consectetur, adipisci velit, sed quia non numquam eius\n              modi tempora incidunt ut labore et dolore magnam aliquam quaerat\n              voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem\n              ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi\n              consequatur? Quis autem vel eum iure reprehenderit qui in ea\n              voluptate velit esse quam nihil molestiae consequatur, vel illum\n              qui dolorem eum fugiat quo voluptas nulla pariatur?\" 1914\n              translation by H. Rackham \"But I must explain to you how all this\n              mistaken idea of denouncing pleasure and praising pain was born\n              and I will give you a complete account of the system, and expound\n              the actual teachings of the great explorer of the truth, the\n              master-builder of human happiness. No one rejects, dislikes, or\n              avoids pleasure itself, because it is pleasure, but because those\n              who do not know how to pursue pleasure rationally encounter\n              consequences that are extremely painful. Nor again is there anyone\n              who loves or pursues or desires to obtain pain of itself, because\n              it is pain, but because occasionally circumstances occur in which\n              toil and pain can procure him some great pleasure. To take a\n              trivial example, which of us ever undertakes laborious physical\n              exercise, except to obtain some advantage from it? But who has any\n              right to find fault with a man who chooses to enjoy a pleasure\n              that has no annoying consequences, or one who avoids a pain that\n              produces no resultant pleasure?\" Section 1.10.33 of \"de Finibus\n              Bonorum et Malorum\", written by Cicero in 45 BC \"At vero eos et\n              accusamus et iusto odio dignissimos ducimus qui blanditiis\n              praesentium voluptatum deleniti atque corrupti quos dolores et\n              quas molestias excepturi sint occaecati cupiditate non provident,\n              similique sunt in culpa qui officia deserunt mollitia animi, id\n              est laborum et dolorum fuga. Et harum quidem rerum facilis est et\n              expedita distinctio. Nam libero tempore, cum soluta nobis est\n              eligendi optio cumque nihil impedit quo minus id quod maxime\n              placeat facere possimus, omnis voluptas assumenda est, omnis dolor\n              repellendus. Temporibus autem quibusdam et aut officiis debitis\n              aut rerum necessitatibus saepe eveniet ut et voluptates\n              repudiandae sint et molestiae non recusandae. Itaque earum rerum\n              hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus\n              maiores alias consequatur aut perferendis doloribus asperiores\n              repellat.\" 1914 translation by H. Rackham \"On the other hand, we\n              denounce with righteous indignation and dislike men who are so\n              beguiled and demoralized by the charms of pleasure of the moment,\n              so blinded by desire, that they cannot foresee the pain and\n              trouble that are bound to ensue; and equal blame belongs to those\n              who fail in their duty through weakness of will, which is the same\n              as saying through shrinking from toil and pain. These cases are\n              perfectly simple and easy to distinguish. In a free hour, when our\n              power of choice is untrammelled and when nothing prevents our\n              being able to do what we like best, every pleasure is to be\n              welcomed and every pain avoided. But in certain circumstances and\n              owing to the claims of duty or the obligations of business it will\n              frequently occur that pleasures have to be repudiated and\n              annoyances accepted. The wise man therefore always holds in these\n              matters to this principle of selection: he rejects pleasures to\n              secure other greater pleasures, or else he endures pains to avoid\n              worse pains.\"\n            </Fragment>\n          </DialogContentText>\n        </DialogContent>\n        {bottom && (\n          <DialogActions>\n            <FormControlLabel\n              sx={{ mr: 'auto' }}\n              control={\n                <Checkbox\n                  checked={accept}\n                  onChange={(_, check) => setAccept(check)}\n                  color=\"secondary\"\n                />\n              }\n              label=\"ยอมรับข้อตกลง\"\n            />\n            <Box>\n              <Button\n                disabled={!accept}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={handleAccept}\n              >\n                ยอมรับ\n              </Button>\n              <Button color=\"inherit\" onClick={handleReject}>\n                ไม่ยอมรับ\n              </Button>\n            </Box>\n          </DialogActions>\n        )}\n      </Dialog>\n    </div>\n  )\n}\n","import * as yup from 'yup'\n\nimport {\n  Box,\n  Container,\n  FormGroup,\n  RadioGroup,\n  Typography\n} from '@mui/material'\nimport { Fragment, useEffect, useLayoutEffect, useState } from 'react'\nimport { Controller, ErrorOption, useForm } from 'react-hook-form'\n\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport axios from 'axios'\nimport { GeoPoint } from 'firebase/firestore'\nimport { useNavigate } from 'react-router-dom'\nimport AutoComplete from '../../components/AutoComplete'\nimport CheckBox from '../../components/Checkbox'\nimport Input from '../../components/Input'\nimport MapBox from '../../components/MapBox'\nimport Radio from '../../components/Radio'\nimport Upload from '../../components/Upload'\nimport UploadMulti from '../../components/UploadMulti'\nimport { PROVINCE_DB } from '../../constants/api'\nimport { DEFAULT_LOCATION, MAX_DATE } from '../../constants/key'\nimport { useSweet } from '../../hooks/sweet'\nimport { BixUser } from '../../models/bixUser'\nimport { StepperRegister } from '../../modules/register/SteperRegister'\nimport TermAndConditionDialog from '../../modules/register/TermAndConditionDialog'\nimport { authService } from '../../services/authService'\nimport { useAppSelector } from '../../states/hooks'\nimport { IProvince } from '../../type'\n\nconst RegisterPage = () => {\n  const { fbUser, user } = useAppSelector((state) => state.auth)\n  const [step, setStep] = useState(0)\n  const [open, setOpen] = useState<boolean>(false)\n\n  useLayoutEffect(() => {\n    if (!!!localStorage.getItem('acceptCondition')) {\n      setOpen(true)\n    }\n  }, [])\n\n  const email = localStorage.getItem('email')\n\n  const defaultValues: BixUser = {\n    type: 'employee',\n    personType: 'person',\n    jobType: {\n      design: false,\n      consult: false,\n      construct: false\n    },\n    profile: {\n      personCardID: '',\n      name: '',\n      lastName: '',\n      tel: '',\n      birthDay: MAX_DATE,\n      gender: 'male',\n      genderDetail: '',\n      address: '',\n      province: '',\n      position: '',\n      location: DEFAULT_LOCATION,\n      role: 'admin',\n      tumbol: '',\n      ampher: '',\n      postCode: '',\n      secretPassword: '',\n      personDocUrl: { name: '', url: '' },\n      personWithDocUrl: { name: '', url: '' },\n      delegateDocURL: { name: '', url: '' }\n    },\n    email: email ?? ''\n  }\n\n  const personSchem = {\n    personCardID: yup\n      .string()\n      .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n      .max(13, 'ไม่เกิน 13 หลัก')\n      .min(13, 'ไม่น้อยกว่า 13 หลัก')\n      .required('ใส่เลขประจำตัวประชาชน'),\n    name: yup.string().required('ใส่ชื่อ'),\n    lastName: yup.string().required('ใส่นามสกุล'),\n    tel: yup\n      .string()\n      .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n      .required('ใส่เบอร์โทรศัพท์'),\n    gender: yup.string(),\n    birthDay: yup.date().required('ใส่วันเดือนปีเกิด'),\n    address: yup.string().required('ใส่สถานที่ติดต่อ'),\n    province: yup.string().nullable().required('เลือกจังหวัด'),\n    tumbol: yup.string().nullable().required('เลือกตำบล/แขวง'),\n    ampher: yup.string().nullable().required('เลือกอำเภอ/เขต'),\n    postCode: yup.string().nullable().required('เลือกรหัสไปรษณีย์'),\n    genderDetail: yup.string().when('gender', {\n      is: 'other',\n      then: yup.string().required('ใส่เพศ')\n    }),\n    secretPassword: yup\n      .string()\n      .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n      .max(6, 'ตัวเลข 6 หลัก')\n      .min(6, 'ตัวเลข 6 หลัก')\n      .required('ใส่รหัส 6 หลัก')\n  }\n\n  const schema = yup.object({\n    personType: yup.string(),\n    profile: yup.object(personSchem).required(),\n    company: yup.object().when('personType', {\n      is: 'company',\n      then: yup.object({\n        comID: yup\n          .string()\n          .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n          .max(13, 'ไม่เกิน 13 หลัก')\n          .min(13, 'ไม่น้อยกว่า 13 หลัก')\n          .required('ใส่เลขประจำตัวผู้เสียภาษีอากร'),\n        name: yup.string().required('ใส่ชื่อบริษัท'),\n        tel: yup\n          .string()\n          .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n          .required('ใส่เบอร์โทรศัพท์'),\n        address: yup.string().required('ใส่สถานที่ติดต่อ'),\n        province: yup.string().nullable().required('เลือกจังหวัด'),\n        tumbol: yup.string().nullable().required('เลือกตำบล/แขวง'),\n        // location: yup.string().required('เลือกพิกัด'),\n        ampher: yup.string().nullable().required('เลือกอำเภอ/เขต'),\n        postCode: yup.string().nullable().required('เลือกรหัสไปรษณีย์'),\n        web: yup.string().required('ใส่ชื่อเว็บไซต์')\n      })\n    }),\n    email: yup.string().email('รูปแบบ Email ไม่ถูกต้อง').required('ใส่ Email')\n  })\n\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    watch,\n    getValues,\n\n    formState: { isValid },\n    reset,\n    trigger,\n    setError\n  } = useForm<BixUser>({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues\n  })\n\n  const zipCode = watch('profile.postCode')\n  const zipCodeCom = watch('company.postCode')\n  const type = watch('type')\n  const personType = watch('personType')\n  const gender = watch('profile.gender')\n\n  const [provinceList, setProvinceList] = useState<IProvince[]>([])\n  const { alertError } = useSweet()\n  const navigate = useNavigate()\n\n  const getProvinceData = async () => {\n    const res = await axios(PROVINCE_DB)\n    setProvinceList(res.data)\n  }\n  useEffect(() => {\n    if (fbUser && user) {\n      navigate('/')\n    }\n    getProvinceData()\n  }, [fbUser, navigate, user])\n\n  const onSubmit = async (data: BixUser) => {\n    if (!data.profile.personDocUrl || !data.profile.personWithDocUrl) {\n      alertError({ title: 'Fail', text: 'อัพโหลดบัตรและรูปถ่ายคู่บัตรประชาชน' })\n      return\n    }\n    if (data.personType == 'company') {\n      if (\n        data.company?.companyCerUrl.length === 0 ||\n        data.company?.memorandumUrl.length === 0\n      ) {\n        alertError({\n          title: 'Fail',\n          text: 'อัพโหลดสำเนานิติบุคคลและสำเนาหนังสือบริคณห์สนธิ'\n        })\n        return\n      }\n    }\n    try {\n      if (fbUser) {\n        let dataSave: BixUser\n        if (data.personType == 'person') {\n          dataSave = {\n            ...data,\n            profile: {\n              ...data.profile,\n              role: null,\n              secretPassword: data.profile.secretPassword ?? null,\n              location: new GeoPoint(\n                (data.profile.location as any)['_lat'],\n                (data.profile.location as any)['_long']\n              )\n            },\n            company: null\n          }\n        } else {\n          dataSave = {\n            ...data,\n            profile: {\n              ...data.profile,\n              role: 'admin',\n              location: new GeoPoint(\n                (data.profile.location as any)['_lat'],\n                (data.profile.location as any)['_long']\n              )\n            }\n          }\n        }\n        await authService.addUser({ ...dataSave })\n      }\n    } catch (err: any) {\n      alertError({ title: 'Fail', text: err })\n    }\n  }\n\n  const checkValid = (): boolean => {\n    if (step === 1) {\n      return isValid\n    }\n    return true\n  }\n\n  const handleCloseDialog = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Fragment>\n      <Container>\n        <Box pb={2}>\n          <Typography variant=\"h5\">ลงทะเบียนผู้ใช้</Typography>\n        </Box>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <StepperRegister\n            isValid={checkValid()}\n            step1={\n              <Fragment>\n                <Controller\n                  name=\"type\"\n                  control={control}\n                  render={({ field: { value, ref, ...rest } }) => (\n                    <RadioGroup row value={value ?? ''}>\n                      <Radio\n                        {...rest}\n                        label=\"ผู้รับจ้าง\"\n                        inputRef={ref}\n                        value=\"employee\"\n                      />\n                      <Radio\n                        {...rest}\n                        label=\"ผู้จ้าง\"\n                        inputRef={ref}\n                        value=\"employer\"\n                      />\n                    </RadioGroup>\n                  )}\n                />\n                <Controller\n                  name=\"personType\"\n                  control={control}\n                  render={({ field: { value, ref, ...rest } }) => (\n                    <RadioGroup row value={value ?? ''}>\n                      <Radio\n                        {...rest}\n                        label=\"บุคคลธรรมดา\"\n                        inputRef={ref}\n                        value=\"person\"\n                      />\n                      <Radio\n                        {...rest}\n                        label=\"นิติบุคคล\"\n                        inputRef={ref}\n                        value=\"company\"\n                      />\n                    </RadioGroup>\n                  )}\n                />\n              </Fragment>\n            }\n            step2={\n              <Box maxWidth=\"600px\" margin=\"auto\">\n                {type === 'employee' && (\n                  <FormGroup row>\n                    <Controller\n                      name=\"jobType.design\"\n                      control={control}\n                      render={({ field: { ref, value, ...rest } }) => (\n                        <CheckBox\n                          {...rest}\n                          label=\"ผู้รับจ้างออกแบบ\"\n                          inputRef={ref}\n                          checked={value}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"jobType.consult\"\n                      control={control}\n                      render={({ field: { ref, value, ...rest } }) => (\n                        <CheckBox\n                          {...rest}\n                          label=\"ผู้รับจ้างควบคุมและตรวจสอบงาน/ที่ปรึกษา\"\n                          inputRef={ref}\n                          checked={value}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"jobType.construct\"\n                      control={control}\n                      render={({ field: { ref, value, ...rest } }) => (\n                        <CheckBox\n                          {...rest}\n                          label=\"ผู้รับจ้างก่อสร้าง\"\n                          inputRef={ref}\n                          checked={value}\n                        />\n                      )}\n                    />\n                  </FormGroup>\n                )}\n\n                {personType == 'company' && (\n                  <Fragment>\n                    <Box pt={4}>\n                      <Typography variant=\"h5\">ข้อมูลนิติบุคคล</Typography>\n                    </Box>\n                    <Controller\n                      name=\"company.comID\"\n                      control={control}\n                      render={({\n                        field: { ref, value, ...rest },\n                        fieldState: { error }\n                      }) => {\n                        return (\n                          <Input\n                            {...rest}\n                            value={value ?? ''}\n                            label=\"เลขทะเบียนนิติบุคคล\"\n                            inputRef={ref}\n                            error={!!error?.type}\n                            helperText={error?.message}\n                          />\n                        )\n                      }}\n                    />\n                    <Controller\n                      name=\"company.name\"\n                      control={control}\n                      render={({\n                        field: { ref, value, ...rest },\n                        fieldState: { error }\n                      }) => {\n                        return (\n                          <Input\n                            {...rest}\n                            value={value ?? ''}\n                            label=\"ชื่อนิติบุคคล\"\n                            inputRef={ref}\n                            error={!!error?.type}\n                            helperText={error?.message}\n                          />\n                        )\n                      }}\n                    />\n                    <Controller\n                      name=\"company.tel\"\n                      control={control}\n                      render={({\n                        field: { ref, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <Input\n                          {...rest}\n                          label=\"เบอร์โทรบริษัท\"\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.address\"\n                      control={control}\n                      render={({\n                        field: { ref, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <Input\n                          {...rest}\n                          label=\"สถานที่ติดต่อ\"\n                          minRows={3}\n                          multiline\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.postCode\"\n                      control={control}\n                      render={({\n                        field: { ref, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <AutoComplete\n                          label=\"รหัสไปรษณีย์\"\n                          options={[\n                            ...new Set(provinceList.map((e) => e.PostCodeMain))\n                          ]}\n                          {...rest}\n                          onChangeAT={(e, v) => {\n                            setValue('company.postCode', v)\n                            setValue('company.province', '')\n                            setValue('company.ampher', '')\n                            setValue('company.tumbol', '')\n                          }}\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.province\"\n                      control={control}\n                      render={({\n                        field: { ref, value, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <AutoComplete\n                          label=\"จังหวัด\"\n                          options={[\n                            ...new Set(\n                              provinceList\n                                .filter((e) => e.PostCodeMain === zipCodeCom)\n                                .map((e) => e.ProvinceThai)\n                            )\n                          ]}\n                          {...rest}\n                          onChangeAT={(e, v) => {\n                            setValue('company.province', v)\n                          }}\n                          value={value}\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.ampher\"\n                      control={control}\n                      render={({\n                        field: { ref, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <AutoComplete\n                          label=\"อำเภอ/เขต\"\n                          options={[\n                            ...new Set(\n                              provinceList\n                                .filter((e) => e.PostCodeMain === zipCodeCom)\n                                .map((e) => e.DistrictThai)\n                            )\n                          ]}\n                          {...rest}\n                          onChangeAT={(e, v) => {\n                            setValue('company.ampher', v)\n                          }}\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.tumbol\"\n                      control={control}\n                      render={({\n                        field: { ref, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <AutoComplete\n                          label=\"ตำบล/แขวง\"\n                          options={[\n                            ...new Set(\n                              provinceList\n                                .filter((e) => e.PostCodeMain === zipCodeCom)\n                                .map((e) => e.TambonThai)\n                            )\n                          ]}\n                          {...rest}\n                          onChangeAT={(e, v) => {\n                            setValue('company.tumbol', v)\n                          }}\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                    <MapBox\n                      label=\"เลือกพิกัดที่อยู่\"\n                      onChange={(lo) => {\n                        setValue('company.location', lo)\n                      }}\n                    />\n                    <Controller\n                      name=\"company.web\"\n                      control={control}\n                      render={({\n                        field: { ref, value, ...rest },\n                        fieldState: { error }\n                      }) => {\n                        return (\n                          <Input\n                            {...rest}\n                            value={value ?? ''}\n                            label=\"เว็บไซต์\"\n                            inputRef={ref}\n                            error={!!error?.type}\n                            helperText={error?.message}\n                          />\n                        )\n                      }}\n                    />\n                  </Fragment>\n                )}\n                <Box pt={4}>\n                  <Typography variant=\"h5\">ข้อมูลผู้ใช้</Typography>\n                </Box>\n                <Controller\n                  name=\"profile.personCardID\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      label=\"เลขประจำตัวประชาชน\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.name\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      label=\"ชื่อ\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.lastName\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      label=\"นามสกุล\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.tel\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      label=\"เบอร์โทรศัพท์\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                {personType == 'company' && (\n                  <Controller\n                    name=\"profile.position\"\n                    control={control}\n                    render={({\n                      field: { ref, value, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <Input\n                        {...rest}\n                        value={value ?? ''}\n                        label=\"ตำแหน่งงาน\"\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                )}\n                <Controller\n                  name=\"email\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      disabled={true}\n                      label=\"Email\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.secretPassword\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => {\n                    return (\n                      <Input\n                        {...rest}\n                        label=\"รหัสลับ 6 ตัว\"\n                        type=\"password\"\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )\n                  }}\n                />\n                <Controller\n                  name=\"profile.gender\"\n                  control={control}\n                  render={({ field: { value, ref, ...rest } }) => (\n                    <RadioGroup\n                      row\n                      value={value ?? ''}\n                      onChange={() => {\n                        trigger()\n                        setValue('profile.genderDetail', '')\n                      }}\n                    >\n                      <Radio\n                        {...rest}\n                        label=\"ชาย\"\n                        inputRef={ref}\n                        value=\"male\"\n                      />\n                      <Radio\n                        {...rest}\n                        label=\"หญิง\"\n                        inputRef={ref}\n                        value=\"female\"\n                      />\n                      <Radio\n                        {...rest}\n                        label=\"อื่นๆ\"\n                        inputRef={ref}\n                        value=\"other\"\n                      />\n                      <Controller\n                        name=\"profile.genderDetail\"\n                        control={control}\n                        render={({\n                          field: { ref, value, ...rest },\n                          fieldState: { error }\n                        }) => (\n                          <Input\n                            {...rest}\n                            value={value ?? ''}\n                            placeholder=\"ระบุ\"\n                            disabled={gender !== 'other'}\n                            inputRef={ref}\n                            error={!!error?.type}\n                            helperText={error?.message}\n                          />\n                        )}\n                      />\n                    </RadioGroup>\n                  )}\n                />\n                <Controller\n                  name=\"profile.birthDay\"\n                  control={control}\n                  render={({\n                    field: { ref, value, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <DatePicker\n                      label=\"วัน/เดือน/ปี เกิด\"\n                      {...rest}\n                      inputRef={ref}\n                      value={value}\n                      views={['year', 'month', 'day']}\n                      disableFuture={true}\n                      maxDate={MAX_DATE}\n                      disableMaskedInput={true}\n                      onChange={(v) => {\n                        if (v) {\n                          setValue('profile.birthDay', v)\n                          const er: ErrorOption = {}\n                          setError('profile.birthDay', er)\n                        }\n                      }}\n                      renderInput={(params) => (\n                        <Input\n                          {...params}\n                          placeholder=\"\"\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.address\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      label=\"สถานที่ติดต่อ/ที่อยู่ปัจจุบัน\"\n                      minRows={3}\n                      multiline\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.postCode\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <AutoComplete\n                      label=\"รหัสไปรษณีย์\"\n                      options={[\n                        ...new Set(provinceList.map((e) => e.PostCodeMain))\n                      ]}\n                      {...rest}\n                      onChangeAT={(e, v) => {\n                        setValue('profile.postCode', v)\n                        setValue('profile.province', '')\n                        setValue('profile.ampher', '')\n                        setValue('profile.tumbol', '')\n                      }}\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.province\"\n                  control={control}\n                  render={({\n                    field: { ref, value, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <AutoComplete\n                      label=\"จังหวัด\"\n                      options={[\n                        ...new Set(\n                          provinceList\n                            .filter((e) => e.PostCodeMain === zipCode)\n                            .map((e) => e.ProvinceThai)\n                        )\n                      ]}\n                      {...rest}\n                      onChangeAT={(e, v) => {\n                        setValue('profile.province', v)\n                      }}\n                      value={value}\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.ampher\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <AutoComplete\n                      label=\"อำเภอ/เขต\"\n                      options={[\n                        ...new Set(\n                          provinceList\n                            .filter((e) => e.PostCodeMain === zipCode)\n                            .map((e) => e.DistrictThai)\n                        )\n                      ]}\n                      {...rest}\n                      onChangeAT={(e, v) => {\n                        setValue('profile.ampher', v)\n                      }}\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.tumbol\"\n                  control={control}\n                  render={({\n                    field: { ref, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <AutoComplete\n                      label=\"ตำบล/แขวง\"\n                      options={[\n                        ...new Set(\n                          provinceList\n                            .filter((e) => e.PostCodeMain === zipCode)\n                            .map((e) => e.TambonThai)\n                        )\n                      ]}\n                      {...rest}\n                      onChangeAT={(e, v) => {\n                        setValue('profile.tumbol', v)\n                      }}\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n                <MapBox\n                  label=\"เลือกพิกัดที่อยู่\"\n                  onChange={(lo) => {\n                    setValue('profile.location', lo)\n                  }}\n                />\n              </Box>\n            }\n            step3={\n              <Box maxWidth=\"600px\" margin=\"auto\">\n                {personType == 'company' && (\n                  <>\n                    <Controller\n                      name=\"company.companyCerUrl\"\n                      control={control}\n                      render={({ field: { value } }) => (\n                        <UploadMulti\n                          label=\"แนบสำเนานิติบุคคล\"\n                          objectFit=\"contain\"\n                          healperText=\"*ไฟล์ PDF\"\n                          imgEx=\"/images/dbd.gif\"\n                          url={value}\n                          success={(url) => {\n                            trigger()\n                            setValue('company.companyCerUrl', url)\n                          }}\n                        />\n                      )}\n                    />\n                    <Controller\n                      name=\"company.memorandumUrl\"\n                      control={control}\n                      render={({ field: { value } }) => (\n                        <UploadMulti\n                          healperText=\"*ไฟล์ PDF\"\n                          objectFit=\"contain\"\n                          imgEx=\"/images/kbh.gif\"\n                          label=\"แนบสำเนาหนังสือบริคณห์สนธิ\"\n                          url={value}\n                          success={(url) => {\n                            trigger()\n                            setValue('company.memorandumUrl', url)\n                          }}\n                        />\n                      )}\n                    />\n                  </>\n                )}\n                <Controller\n                  name=\"profile.personDocUrl\"\n                  control={control}\n                  render={({ field: { value } }) => (\n                    <Upload\n                      label=\"แนบบัตรประชาชน\"\n                      url={value}\n                      success={(url) => {\n                        trigger()\n                        setValue('profile.personDocUrl', url)\n                      }}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.personWithDocUrl\"\n                  control={control}\n                  render={({ field: { value } }) => (\n                    <Upload\n                      label=\"รูปถ่ายคู่บัตรประชาชน\"\n                      healperText=\"*ถ่ายรูปให้ชัดเจน ทั้งบัตรและใบหน้า ตามภาพตัวอย่าง\"\n                      imgEx=\"/images/face_id.gif\"\n                      url={value}\n                      success={(url) => {\n                        trigger()\n                        setValue('profile.personWithDocUrl', url)\n                      }}\n                    />\n                  )}\n                />\n                <Controller\n                  name=\"profile.delegateDocURL\"\n                  control={control}\n                  render={() => {\n                    const val = getValues()\n                    return (\n                      <Upload\n                        label=\"หนังสือมอบอำนาจ\"\n                        imgEx=\"/images/dbd.gif\"\n                        objectFit=\"contain\"\n                        healperText=\"*ไฟล์ PDF หรือ รูปภาพ\"\n                        fileTypes={['PDF']}\n                        url={val.profile.delegateDocURL}\n                        success={(url) => {\n                          trigger()\n                          setValue('profile.delegateDocURL', url)\n                        }}\n                      />\n                    )\n                  }}\n                />\n              </Box>\n            }\n            onSubmit={() => {\n              const data = getValues()\n              onSubmit(data)\n            }}\n            onNext={(i) => {\n              setStep(i)\n              trigger()\n            }}\n            onBack={(i) => {\n              setStep(i)\n              if (i === 0) {\n                reset(defaultValues)\n              }\n            }}\n          />\n        </form>\n      </Container>\n      <TermAndConditionDialog open={open} onClose={handleCloseDialog} />\n    </Fragment>\n  )\n}\nexport default RegisterPage\n"],"names":["StepperRegister","step1","step2","step3","onSubmit","isValid","onNext","onBack","steps","title","component","useState","activeStep","setActiveStep","theme","useTheme","Box","sx","width","Stepper","map","e","index","Step","color","palette","secondary","main","primary","dark","StepLabel","pb","margin","p","display","flexDirection","pt","Button","variant","disabled","onClick","prevActiveStep","mr","length","useStyles","makeStyles","backDrop","backdropFilter","backgroundColor","TermAndConditionDialog","open","onClose","classes","navigate","useNavigate","bottom","setButtom","accept","setAccept","handleReject","signOut","auth","scrollRef","useBottomScrollListener","Dialog","scroll","BackdropProps","root","DialogTitle","id","DialogContent","dividers","ref","DialogContentText","tabIndex","Fragment","DialogActions","FormControlLabel","control","checked","onChange","_","check","label","localStorage","setItem","useAppSelector","state","fbUser","user","step","setStep","setOpen","useLayoutEffect","getItem","email","defaultValues","type","personType","jobType","design","consult","construct","profile","personCardID","name","lastName","tel","birthDay","MAX_DATE","gender","genderDetail","address","province","position","location","DEFAULT_LOCATION","role","tumbol","ampher","postCode","secretPassword","personDocUrl","url","personWithDocUrl","delegateDocURL","personSchem","yup","matches","RegExp","max","min","required","nullable","when","is","then","schema","company","comID","web","useForm","resolver","yupResolver","mode","handleSubmit","setValue","watch","getValues","formState","reset","trigger","setError","zipCode","zipCodeCom","provinceList","setProvinceList","alertError","useSweet","getProvinceData","axios","PROVINCE_DB","res","data","useEffect","text","companyCerUrl","memorandumUrl","dataSave","GeoPoint","authService","Container","Typography","render","field","value","rest","RadioGroup","row","Radio","inputRef","maxWidth","FormGroup","error","fieldState","Input","helperText","message","minRows","multiline","AutoComplete","options","Set","PostCodeMain","onChangeAT","v","filter","ProvinceThai","DistrictThai","TambonThai","MapBox","lo","placeholder","DatePicker","views","disableFuture","maxDate","disableMaskedInput","renderInput","params","UploadMulti","objectFit","healperText","imgEx","success","Upload","val","fileTypes","i"],"sourceRoot":""}