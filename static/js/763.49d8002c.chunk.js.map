{"version":3,"file":"static/js/763.49d8002c.chunk.js","mappings":"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","sources":["components/Checkbox.tsx","components/SteperRegister.tsx","components/UploadMulti.tsx","pages/RegisterPage.tsx"],"sourcesContent":["import { CheckboxProps } from '@material-ui/core'\nimport { Checkbox, FormControlLabel } from '@mui/material'\n\ninterface CheckBoxProp extends CheckboxProps {\n  label?: string\n}\n\nexport default function CheckBox(prop: CheckBoxProp) {\n  return (\n    <FormControlLabel\n      control={<Checkbox {...prop} color=\"secondary\" />}\n      label={prop.label}\n    />\n  )\n}\n","import { Box, Button } from '@mui/material'\r\nimport Step from '@mui/material/Step'\r\nimport StepLabel from '@mui/material/StepLabel'\r\nimport Stepper from '@mui/material/Stepper'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { ReactNode, useState } from 'react'\r\n\r\ninterface IStepperRegister {\r\n  step1: JSX.Element\r\n  step2: JSX.Element\r\n  step3: JSX.Element\r\n  onSubmit?: () => void\r\n  isValid?: boolean\r\n  onNext?: (i: number) => void\r\n  onBack?: (i: number) => void\r\n}\r\n\r\nexport function StepperRegister({\r\n  step1,\r\n  step2,\r\n  step3,\r\n  onSubmit,\r\n  isValid,\r\n  onNext,\r\n  onBack\r\n}: IStepperRegister) {\r\n  const steps: { title: string; component: JSX.Element }[] = [\r\n    { title: 'ประเภทบัญชี', component: step1 },\r\n    { title: 'ข้อมูลผู้ใช้', component: step2 },\r\n    { title: 'เอกสารเพิ่มเติม', component: step3 }\r\n  ]\r\n\r\n  const [activeStep, setActiveStep] = useState(0)\r\n  const theme = useTheme()\r\n\r\n  const handleNext = () => {\r\n    if (activeStep <= steps.length && isValid) {\r\n      setActiveStep((prevActiveStep) => {\r\n        if (onNext) {\r\n          onNext(prevActiveStep + 1)\r\n        }\r\n        return prevActiveStep + 1\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => {\r\n      if (onBack) {\r\n        onBack(prevActiveStep - 1)\r\n      }\r\n      return prevActiveStep - 1\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((e, index) => {\r\n          const stepProps: { completed?: boolean } = {}\r\n          const labelProps: {\r\n            optional?: ReactNode\r\n          } = {}\r\n          return (\r\n            <Step\r\n              key={index}\r\n              {...stepProps}\r\n              sx={{\r\n                '& .css-1gjpaj2-MuiSvgIcon-root-MuiStepIcon-root.Mui-active': {\r\n                  color: theme.palette.secondary.main\r\n                },\r\n                '& .css-1gjpaj2-MuiSvgIcon-root-MuiStepIcon-root.Mui-completed':\r\n                {\r\n                  color: theme.palette.primary.dark\r\n                }\r\n              }}\r\n            >\r\n              <StepLabel {...labelProps}>{e.title}</StepLabel>\r\n            </Step>\r\n          )\r\n        })}\r\n      </Stepper>\r\n      <Box pb={6}>\r\n        <Box margin='auto' p={4}>{steps[activeStep].component}</Box>\r\n        <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Back\r\n          </Button>\r\n          {activeStep === steps.length - 1 ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                if (isValid) {\r\n                  onSubmit && onSubmit()\r\n                }\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={handleNext} color=\"secondary\" variant=\"contained\">\r\n              Next\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Delete } from '@mui/icons-material'\r\nimport { Box, Grid, IconButton, Typography } from '@mui/material'\r\nimport { getDownloadURL, getStorage, ref, uploadBytes } from 'firebase/storage'\r\nimport { useState } from 'react'\r\nimport { useAppSelector } from '../states/hooks'\r\nimport { UploadArea } from './uploadFile/UploadArea'\r\n\r\nexport default function UploadMulti({\r\n  success,\r\n  label,\r\n  url,\r\n  imgEx = '/images/id_card.gif',\r\n  healperText = '*ถ่ายรูปให้ชัดเจน และไม่มีแสงสะท้อน',\r\n  objectFit = 'cover'\r\n}: {\r\n  label: string\r\n  success: (url: { name: string; url: string }[]) => void\r\n  url?: { name: string; url: string }[]\r\n  imgEx?: string\r\n  healperText?: string\r\n  objectFit?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down'\r\n}) {\r\n  const { profile } = useAppSelector((state) => state.auth)\r\n  const [filePath, setFilePath] = useState<{ name: string; url: string }[]>(\r\n    url ?? []\r\n  )\r\n\r\n  const handleChange = async (fileData: File) => {\r\n    const storage = getStorage()\r\n    const storageRef = ref(\r\n      storage,\r\n      `images/${profile?.personCardID ?? 'all'}/${fileData.name}`\r\n    )\r\n\r\n    const snapshot = await uploadBytes(storageRef, fileData)\r\n    const data = await getDownloadURL(snapshot.ref)\r\n\r\n    success([...filePath, { name: fileData.name, url: data }])\r\n    setFilePath([...filePath, { name: fileData.name, url: data }])\r\n  }\r\n\r\n  // const handleClick = () => {\r\n  //   const current = hiddenFileInput.current as any\r\n  //   current.click()\r\n  // }\r\n\r\n  return (\r\n    <Box marginBottom={3}>\r\n      <Grid container alignItems=\"center\" spacing={2}>\r\n        <Grid item sm={12} md={6}>\r\n          <Typography variant=\"subtitle1\">{label}</Typography>\r\n          <UploadArea onChange={handleChange} noDisplay={true} />\r\n        </Grid>\r\n        <Grid item sm={12} md={6}>\r\n          <Typography variant=\"subtitle1\">ตัวอย่าง</Typography>\r\n          <Typography variant=\"caption\" color=\"rebeccapurple\">\r\n            {healperText}\r\n          </Typography>\r\n          <img\r\n            style={{ borderRadius: '4px', height: '181px', objectFit }}\r\n            width=\"100%\"\r\n            src={imgEx}\r\n          />\r\n          {/* {filePath && <img style={{ borderRadius: '4px' }} width='100%' src={filePath} />} */}\r\n        </Grid>\r\n      </Grid>\r\n      {filePath.map((e, i) => (\r\n        <Box key={e.name}>\r\n          <a href={e.url} target=\"_blank\">\r\n            {`( ${i + 1} ) ${e.name}`}\r\n          </a>\r\n          <IconButton\r\n            onClick={() => {\r\n              success([...filePath.filter((v) => v.name != e.name)])\r\n              setFilePath([...filePath.filter((v) => v.name != e.name)])\r\n            }}\r\n          >\r\n            <Delete />\r\n          </IconButton>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup'\nimport {\n  Box,\n  Container,\n  FormGroup,\n  RadioGroup,\n  Typography\n} from '@mui/material'\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker'\nimport axios from 'axios'\nimport { GeoPoint } from 'firebase/firestore'\nimport { Fragment, useEffect, useState } from 'react'\nimport { Controller, ErrorOption, useForm } from 'react-hook-form'\nimport { useNavigate } from 'react-router-dom'\nimport * as yup from 'yup'\nimport AutoComplete from '../components/AutoComplete'\nimport CheckBox from '../components/Checkbox'\nimport Input from '../components/Input'\nimport MapBox from '../components/MapBox'\nimport Radio from '../components/Radio'\nimport { StepperRegister } from '../components/SteperRegister'\nimport Upload from '../components/Upload'\nimport UploadMulti from '../components/UploadMulti'\nimport { PROVINCE_DB } from '../constants/api'\nimport { DEFAULT_LOCATION, MAX_DATE } from '../constants/key'\nimport { useSweet } from '../hooks/sweet'\nimport { BixUser } from '../models/bixUser'\nimport { authService } from '../services/authService'\nimport { useAppSelector } from '../states/hooks'\nimport { IProvince } from '../type'\n\nconst schema = yup.object({\n  personType: yup.string(),\n  gender: yup.string(),\n  profile: yup\n    .object({\n      personCardID: yup\n        .string()\n        .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n        .max(13, 'ไม่เกิน 13 หลัก')\n        .min(13, 'ไม่น้อยกว่า 13 หลัก')\n        .required('ใส่เลขประจำตัวประชาชน'),\n      name: yup.string().required('ใส่ชื่อ'),\n      lastName: yup.string().required('ใส่นามสกุล'),\n      birthDay: yup.date().required('ใส่วันเดือนปีเกิด'),\n      address: yup.string().required('ใส่สถานที่ติดต่อ'),\n      province: yup.string().nullable().required('เลือกจังหวัด'),\n      tumbol: yup.string().nullable().required('เลือกตำบล/แขวง'),\n      ampher: yup.string().nullable().required('เลือกอำเภอ/เขต'),\n      postCode: yup.string().nullable().required('เลือกรหัสไปรษณีย์'),\n      secret: yup.string().when('personType', {\n        is: 'company',\n        then: yup\n          .string()\n          .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n          .max(6, 'ตัวเลข 6 หลัก')\n          .min(6, 'ตัวเลข 6 หลัก')\n          .required('ใส่รหัส 6 หลัก')\n      }),\n      genderDetail: yup.string().when('gender', {\n        is: 'other',\n        then: yup.string().required('ใส่เพศ')\n      })\n    })\n    .required(),\n  company: yup.object().when('personType', {\n    is: 'company',\n    then: yup.object({\n      comID: yup\n        .string()\n        .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n        .max(13, 'ไม่เกิน 13 หลัก')\n        .min(13, 'ไม่น้อยกว่า 13 หลัก')\n        .required('ใส่เลขประจำตัวผู้เสียภาษีอากร'),\n      name: yup.string().required('ใส่ชื่อบริษัท'),\n      address: yup.string().required('ใส่สถานที่ติดต่อ'),\n      province: yup.string().nullable().required('เลือกจังหวัด'),\n      tumbol: yup.string().nullable().required('เลือกตำบล/แขวง'),\n      // location: yup.string().required('เลือกพิกัด'),\n      ampher: yup.string().nullable().required('เลือกอำเภอ/เขต'),\n      postCode: yup.string().nullable().required('เลือกรหัสไปรษณีย์'),\n      web: yup.string().required('ใส่ชื่อเว็บไซต์')\n    })\n  }),\n  tel: yup\n    .string()\n    .matches(new RegExp('^[0-9]*$'), 'ใส่ตัวเลขเท่านั้น')\n    .required('ใส่เบอร์โทรศัพท์'),\n  email: yup.string().email('รูปแบบ Email ไม่ถูกต้อง').required('ใส่ Email')\n})\n\nconst RegisterPage = () => {\n  const { fbUser, user } = useAppSelector((state) => state.auth)\n  const [step, setStep] = useState(0)\n\n  const email = localStorage.getItem('email')\n\n  let defaultValues: BixUser = {\n    type: 'employee',\n    personType: 'person',\n    jobType: {\n      design: false,\n      consult: false,\n      construct: false\n    },\n    profile: {\n      personCardID: '',\n      name: '',\n      lastName: '',\n      birthDay: MAX_DATE,\n      gender: 'male',\n      genderDetail: '',\n      address: '',\n      province: '',\n      position: '',\n      location: DEFAULT_LOCATION,\n      role: 'admin',\n      tumbol: '',\n      ampher: '',\n      postCode: '',\n      personDocUrl: '',\n      personWithDocUrl: '',\n      delegateDocURL: ''\n    },\n    tel: '',\n    email: email ?? ''\n  }\n\n  if (process.env.NODE_ENV == 'development') {\n    defaultValues = {\n      type: 'employee',\n      personType: 'company',\n      jobType: {\n        design: true,\n        consult: false,\n        construct: false\n      },\n      profile: {\n        personCardID: '1111111111111',\n        name: 'zzz',\n        lastName: 'xxx',\n        birthDay: MAX_DATE,\n        gender: 'male',\n        genderDetail: '',\n        address: '20/78',\n        secret: '123456',\n        province: 'พระนครศรีอยุธยา',\n        location: DEFAULT_LOCATION,\n        role: 'admin',\n        position: 'xxxy',\n        tumbol: 'พยอม',\n        ampher: 'อำเภอบางปะอิน',\n        postCode: '13170',\n        personDocUrl: '',\n        personWithDocUrl: '',\n        delegateDocURL: ''\n      },\n      company: {\n        comID: '2223322323545',\n        name: 'vvv',\n        address: '20/78',\n        province: 'พระนครศรีอยุธยา',\n        tumbol: 'พยอม',\n        ampher: 'อำเภอบางปะอิน',\n        postCode: '13170',\n        location: DEFAULT_LOCATION,\n        web: 'www',\n        companyCerUrl: '',\n        memorandumUrl: [],\n        members: []\n      },\n      tel: '123456',\n      email: email ?? ''\n    }\n  }\n\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    watch,\n    getValues,\n    formState: { isValid },\n    reset,\n    trigger,\n    setError\n  } = useForm<BixUser>({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues\n  })\n\n  const zipCode = watch('profile.postCode')\n  const zipCodeCom = watch('company.postCode')\n  const type = watch('type')\n  const personType = watch('personType')\n  const gender = watch('profile.gender')\n\n  const [provinceList, setProvinceList] = useState<IProvince[]>([])\n  const { alertError } = useSweet()\n  const navigate = useNavigate()\n\n  const getProvinceData = async () => {\n    const res = await axios(PROVINCE_DB)\n    setProvinceList(res.data)\n  }\n  useEffect(() => {\n    if (fbUser && user) {\n      navigate('/')\n    }\n    getProvinceData()\n  }, [fbUser, navigate, user])\n\n  const onSubmit = async (data: BixUser) => {\n    if (!data.profile.personDocUrl || !data.profile.personWithDocUrl) {\n      alertError({ title: 'Fail', text: 'อัพโหลดบัตรและรูปถ่ายคู่บัตรประชาชน' })\n      return\n    }\n    if (data.personType == 'company') {\n      if (\n        !data.company?.companyCerUrl ||\n        data.company?.memorandumUrl.length === 0\n      ) {\n        alertError({\n          title: 'Fail',\n          text: 'อัพโหลดสำเนานิติบุคคลและสำเนาหนังสือบริคณห์สนธิ'\n        })\n        return\n      }\n    }\n    try {\n      if (fbUser) {\n        await authService.addUser({\n          ...data,\n          profile: {\n            ...data.profile,\n            role: data.personType === 'company' ? 'admin' : null,\n            secret: data.profile.secret ?? null,\n            location: new GeoPoint(\n              (data.profile.location as any)['_lat'],\n              (data.profile.location as any)['_long']\n            )\n          },\n          company: !!data.company\n            ? {\n                ...data.company,\n                location: new GeoPoint(\n                  (data.company.location as any)['_lat'],\n                  (data.company.location as any)['_long']\n                )\n              }\n            : null\n        })\n      }\n    } catch (err: any) {\n      alertError({ title: 'Fail', text: err })\n    }\n  }\n\n  const checkValid = (): boolean => {\n    if (step === 1) {\n      return isValid\n    }\n    return true\n  }\n\n  return (\n    <Container>\n      <Box pb={2}>\n        <Typography variant=\"h5\">ลงทะเบียนผู้ใช้</Typography>\n      </Box>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <StepperRegister\n          isValid={checkValid()}\n          step1={\n            <Fragment>\n              <Controller\n                name=\"type\"\n                control={control}\n                render={({ field: { value, ref, ...rest } }) => (\n                  <RadioGroup row value={value}>\n                    <Radio\n                      {...rest}\n                      label=\"ผู้รับจ้าง\"\n                      inputRef={ref}\n                      value=\"employee\"\n                    />\n                    <Radio\n                      {...rest}\n                      label=\"ผู้จ้าง\"\n                      inputRef={ref}\n                      value=\"employer\"\n                    />\n                  </RadioGroup>\n                )}\n              />\n              <Controller\n                name=\"personType\"\n                control={control}\n                render={({ field: { value, ref, ...rest } }) => (\n                  <RadioGroup row value={value}>\n                    <Radio\n                      {...rest}\n                      label=\"บุคคลธรรมดา\"\n                      inputRef={ref}\n                      value=\"person\"\n                    />\n                    <Radio\n                      {...rest}\n                      label=\"นิติบุคคล\"\n                      inputRef={ref}\n                      value=\"company\"\n                    />\n                  </RadioGroup>\n                )}\n              />\n            </Fragment>\n          }\n          step2={\n            <Box maxWidth=\"600px\" margin=\"auto\">\n              {type === 'employee' && (\n                <FormGroup row>\n                  <Controller\n                    name=\"jobType.design\"\n                    control={control}\n                    render={({ field: { ref, value, ...rest } }) => (\n                      <CheckBox\n                        {...rest}\n                        label=\"ผู้รับจ้างออกแบบ\"\n                        inputRef={ref}\n                        checked={value}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"jobType.consult\"\n                    control={control}\n                    render={({ field: { ref, value, ...rest } }) => (\n                      <CheckBox\n                        {...rest}\n                        label=\"ผู้รับจ้างควบคุมและตรวจสอบงาน/ที่ปรึกษา\"\n                        inputRef={ref}\n                        checked={value}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"jobType.construct\"\n                    control={control}\n                    render={({ field: { ref, value, ...rest } }) => (\n                      <CheckBox\n                        {...rest}\n                        label=\"ผู้รับจ้างก่อสร้าง\"\n                        inputRef={ref}\n                        checked={value}\n                      />\n                    )}\n                  />\n                </FormGroup>\n              )}\n\n              {personType == 'company' && (\n                <Fragment>\n                  <Box pt={4}>\n                    <Typography variant=\"h5\">ข้อมูลนิติบุคคล</Typography>\n                  </Box>\n                  <Controller\n                    name=\"company.comID\"\n                    control={control}\n                    render={({\n                      field: { ref, value, ...rest },\n                      fieldState: { error }\n                    }) => {\n                      return (\n                        <Input\n                          {...rest}\n                          value={value ?? ''}\n                          label=\"เลขทะเบียนนิติบุคคล\"\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )\n                    }}\n                  />\n                  <Controller\n                    name=\"company.name\"\n                    control={control}\n                    render={({\n                      field: { ref, value, ...rest },\n                      fieldState: { error }\n                    }) => {\n                      return (\n                        <Input\n                          {...rest}\n                          value={value ?? ''}\n                          label=\"นิติบุคคล\"\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )\n                    }}\n                  />\n                  <Controller\n                    name=\"company.address\"\n                    control={control}\n                    render={({\n                      field: { ref, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <Input\n                        {...rest}\n                        label=\"สถานที่ติดต่อ\"\n                        minRows={3}\n                        multiline\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"company.postCode\"\n                    control={control}\n                    render={({\n                      field: { ref, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <AutoComplete\n                        label=\"รหัสไปรษณีย์\"\n                        options={[\n                          ...new Set(provinceList.map((e) => e.PostCodeMain))\n                        ]}\n                        {...rest}\n                        onChangeAT={(e, v) => {\n                          setValue('company.postCode', v)\n                          setValue('company.province', '')\n                          setValue('company.ampher', '')\n                          setValue('company.tumbol', '')\n                        }}\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"company.province\"\n                    control={control}\n                    render={({\n                      field: { ref, value, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <AutoComplete\n                        label=\"จังหวัด\"\n                        options={[\n                          ...new Set(\n                            provinceList\n                              .filter((e) => e.PostCodeMain === zipCodeCom)\n                              .map((e) => e.ProvinceThai)\n                          )\n                        ]}\n                        {...rest}\n                        onChangeAT={(e, v) => {\n                          setValue('company.province', v)\n                        }}\n                        value={value}\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"company.ampher\"\n                    control={control}\n                    render={({\n                      field: { ref, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <AutoComplete\n                        label=\"อำเภอ/เขต\"\n                        options={[\n                          ...new Set(\n                            provinceList\n                              .filter((e) => e.PostCodeMain === zipCodeCom)\n                              .map((e) => e.DistrictThai)\n                          )\n                        ]}\n                        {...rest}\n                        onChangeAT={(e, v) => {\n                          setValue('company.ampher', v)\n                        }}\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"company.tumbol\"\n                    control={control}\n                    render={({\n                      field: { ref, ...rest },\n                      fieldState: { error }\n                    }) => (\n                      <AutoComplete\n                        label=\"ตำบล/แขวง\"\n                        options={[\n                          ...new Set(\n                            provinceList\n                              .filter((e) => e.PostCodeMain === zipCodeCom)\n                              .map((e) => e.TambonThai)\n                          )\n                        ]}\n                        {...rest}\n                        onChangeAT={(e, v) => {\n                          setValue('company.tumbol', v)\n                        }}\n                        inputRef={ref}\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                  <MapBox\n                    label=\"เลือกพิกัดที่อยู่\"\n                    onChange={(lo) => {\n                      setValue('company.location', lo)\n                    }}\n                  />\n                  <Controller\n                    name=\"company.web\"\n                    control={control}\n                    render={({\n                      field: { ref, value, ...rest },\n                      fieldState: { error }\n                    }) => {\n                      return (\n                        <Input\n                          {...rest}\n                          value={value ?? ''}\n                          label=\"เว็บไซต์\"\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )\n                    }}\n                  />\n                </Fragment>\n              )}\n              <Box pt={4}>\n                <Typography variant=\"h5\">ข้อมูลผู้ใช้</Typography>\n              </Box>\n              <Controller\n                name=\"profile.personCardID\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    label=\"เลขประจำตัวประชาชน\"\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.name\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    label=\"ชื่อ\"\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.lastName\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    label=\"นามสกุล\"\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              {personType == 'company' && (\n                <Controller\n                  name=\"profile.position\"\n                  control={control}\n                  render={({\n                    field: { ref, value, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      value={value ?? ''}\n                      label=\"ตำแหน่งงาน\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n              )}\n              <Controller\n                name=\"tel\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    label=\"เบอร์โทรศัพท์\"\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"email\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    disabled={true}\n                    label=\"Email\"\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              {personType === 'company' && (\n                <Controller\n                  name=\"profile.secret\"\n                  control={control}\n                  render={({\n                    field: { ref, value, ...rest },\n                    fieldState: { error }\n                  }) => (\n                    <Input\n                      {...rest}\n                      value={value ?? ''}\n                      label=\"รหัสลับ 6 ตัว\"\n                      type=\"password\"\n                      inputRef={ref}\n                      error={!!error?.type}\n                      helperText={error?.message}\n                    />\n                  )}\n                />\n              )}\n              <Controller\n                name=\"profile.gender\"\n                control={control}\n                render={({ field: { value, ref, ...rest } }) => (\n                  <RadioGroup\n                    row\n                    value={value}\n                    onChange={() => {\n                      trigger()\n                    }}\n                  >\n                    <Radio {...rest} label=\"ชาย\" inputRef={ref} value=\"male\" />\n                    <Radio\n                      {...rest}\n                      label=\"หญิง\"\n                      inputRef={ref}\n                      value=\"female\"\n                    />\n                    <Radio\n                      {...rest}\n                      label=\"อื่นๆ\"\n                      inputRef={ref}\n                      value=\"other\"\n                    />\n                    <Controller\n                      name=\"profile.genderDetail\"\n                      control={control}\n                      render={({\n                        field: { ref, value, ...rest },\n                        fieldState: { error }\n                      }) => (\n                        <Input\n                          {...rest}\n                          value={value ?? ''}\n                          placeholder=\"ระบุ\"\n                          disabled={gender !== 'other'}\n                          inputRef={ref}\n                          error={!!error?.type}\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                  </RadioGroup>\n                )}\n              />\n              <Controller\n                name=\"profile.birthDay\"\n                control={control}\n                render={({\n                  field: { ref, value, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <DatePicker\n                    label=\"วัน/เดือน/ปี เกิด\"\n                    {...rest}\n                    inputRef={ref}\n                    value={value}\n                    views={['year', 'month', 'day']}\n                    disableFuture={true}\n                    maxDate={MAX_DATE}\n                    disableMaskedInput={true}\n                    onChange={(v) => {\n                      if (v) {\n                        setValue('profile.birthDay', v)\n                        const er: ErrorOption = {}\n                        setError('profile.birthDay', er)\n                      }\n                    }}\n                    renderInput={(params) => (\n                      <Input\n                        {...params}\n                        placeholder=\"\"\n                        error={!!error?.type}\n                        helperText={error?.message}\n                      />\n                    )}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.address\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <Input\n                    {...rest}\n                    label=\"สถานที่ติดต่อ/ที่อยู่ปัจจุบัน\"\n                    minRows={3}\n                    multiline\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.postCode\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <AutoComplete\n                    label=\"รหัสไปรษณีย์\"\n                    options={[\n                      ...new Set(provinceList.map((e) => e.PostCodeMain))\n                    ]}\n                    {...rest}\n                    onChangeAT={(e, v) => {\n                      setValue('profile.postCode', v)\n                      setValue('profile.province', '')\n                      setValue('profile.ampher', '')\n                      setValue('profile.tumbol', '')\n                    }}\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.province\"\n                control={control}\n                render={({\n                  field: { ref, value, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <AutoComplete\n                    label=\"จังหวัด\"\n                    options={[\n                      ...new Set(\n                        provinceList\n                          .filter((e) => e.PostCodeMain === zipCode)\n                          .map((e) => e.ProvinceThai)\n                      )\n                    ]}\n                    {...rest}\n                    onChangeAT={(e, v) => {\n                      setValue('profile.province', v)\n                    }}\n                    value={value}\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.ampher\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <AutoComplete\n                    label=\"อำเภอ/เขต\"\n                    options={[\n                      ...new Set(\n                        provinceList\n                          .filter((e) => e.PostCodeMain === zipCode)\n                          .map((e) => e.DistrictThai)\n                      )\n                    ]}\n                    {...rest}\n                    onChangeAT={(e, v) => {\n                      setValue('profile.ampher', v)\n                    }}\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.tumbol\"\n                control={control}\n                render={({\n                  field: { ref, ...rest },\n                  fieldState: { error }\n                }) => (\n                  <AutoComplete\n                    label=\"ตำบล/แขวง\"\n                    options={[\n                      ...new Set(\n                        provinceList\n                          .filter((e) => e.PostCodeMain === zipCode)\n                          .map((e) => e.TambonThai)\n                      )\n                    ]}\n                    {...rest}\n                    onChangeAT={(e, v) => {\n                      setValue('profile.tumbol', v)\n                    }}\n                    inputRef={ref}\n                    error={!!error?.type}\n                    helperText={error?.message}\n                  />\n                )}\n              />\n              <MapBox\n                label=\"เลือกพิกัดที่อยู่\"\n                onChange={(lo) => {\n                  setValue('profile.location', lo)\n                }}\n              />\n            </Box>\n          }\n          step3={\n            <Box maxWidth=\"600px\" margin=\"auto\">\n              {personType == 'company' && (\n                <>\n                  <Controller\n                    name=\"company.companyCerUrl\"\n                    control={control}\n                    render={({ field: { value } }) => (\n                      <Upload\n                        label=\"แนบสำเนานิติบุคคล\"\n                        objectFit=\"contain\"\n                        healperText=\"*ไฟล์ PDF หรือ รูปภาพ\"\n                        imgEx=\"/images/dbd.gif\"\n                        url={value}\n                        success={(url) => {\n                          trigger()\n                          setValue('company.companyCerUrl', url)\n                        }}\n                      />\n                    )}\n                  />\n                  <Controller\n                    name=\"company.memorandumUrl\"\n                    control={control}\n                    render={({ field: { value } }) => (\n                      <UploadMulti\n                        healperText=\"*ไฟล์ PDF หรือ รูปภาพ\"\n                        objectFit=\"contain\"\n                        imgEx=\"/images/kbh.gif\"\n                        label=\"แนบสำเนาหนังสือบริคณห์สนธิ\"\n                        url={value}\n                        success={(url) => {\n                          trigger()\n                          setValue('company.memorandumUrl', url)\n                        }}\n                      />\n                    )}\n                  />\n                </>\n              )}\n              <Controller\n                name=\"profile.personDocUrl\"\n                control={control}\n                render={({ field: { value } }) => (\n                  <Upload\n                    label=\"แนบบัตรประชาชน\"\n                    url={value}\n                    success={(url) => {\n                      trigger()\n                      setValue('profile.personDocUrl', url)\n                    }}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.personWithDocUrl\"\n                control={control}\n                render={({ field: { value } }) => (\n                  <Upload\n                    label=\"รูปถ่ายคู่บัตรประชาชน\"\n                    healperText=\"*ถ่ายรูปให้ชัดเจน ทั้งบัตรและใบหน้า ตามภาพตัวอย่าง\"\n                    imgEx=\"/images/face_id.gif\"\n                    url={value}\n                    success={(url) => {\n                      trigger()\n                      setValue('profile.personWithDocUrl', url)\n                    }}\n                  />\n                )}\n              />\n              <Controller\n                name=\"profile.delegateDocURL\"\n                control={control}\n                render={() => {\n                  const val = getValues()\n                  return (\n                    <Upload\n                      label=\"หนังสือมอบอำนาจ\"\n                      imgEx=\"/images/dbd.gif\"\n                      objectFit=\"contain\"\n                      healperText=\"*ไฟล์ PDF หรือ รูปภาพ\"\n                      url={val.profile.delegateDocURL}\n                      success={(url) => {\n                        trigger()\n                        setValue('profile.delegateDocURL', url)\n                      }}\n                    />\n                  )\n                }}\n              />\n            </Box>\n          }\n          onSubmit={() => {\n            const data = getValues()\n            onSubmit(data)\n          }}\n          onNext={(i) => {\n            setStep(i)\n            trigger()\n          }}\n          onBack={(i) => {\n            setStep(i)\n            if (i === 0) {\n              reset(defaultValues)\n            }\n          }}\n        />\n      </form>\n    </Container>\n  )\n}\nexport default RegisterPage\n"],"names":["CheckBox","prop","FormControlLabel","control","Checkbox","color","label","StepperRegister","step1","step2","step3","onSubmit","isValid","onNext","onBack","steps","title","component","useState","activeStep","setActiveStep","theme","useTheme","Box","sx","width","Stepper","map","e","index","Step","palette","secondary","main","primary","dark","StepLabel","pb","margin","p","display","flexDirection","pt","Button","variant","disabled","onClick","prevActiveStep","mr","length","UploadMulti","success","url","imgEx","healperText","objectFit","profile","useAppSelector","state","auth","filePath","setFilePath","handleChange","fileData","storage","getStorage","storageRef","ref","personCardID","name","uploadBytes","snapshot","getDownloadURL","data","marginBottom","Grid","container","alignItems","spacing","item","sm","md","Typography","UploadArea","onChange","noDisplay","style","borderRadius","height","src","i","href","target","IconButton","filter","v","Delete","schema","yup","personType","gender","matches","RegExp","max","min","required","lastName","birthDay","address","province","nullable","tumbol","ampher","postCode","secret","when","is","then","genderDetail","company","comID","web","tel","email","fbUser","user","step","setStep","localStorage","getItem","defaultValues","type","jobType","design","consult","construct","MAX_DATE","position","location","DEFAULT_LOCATION","role","personDocUrl","personWithDocUrl","delegateDocURL","useForm","resolver","yupResolver","mode","handleSubmit","setValue","watch","getValues","formState","reset","trigger","setError","zipCode","zipCodeCom","provinceList","setProvinceList","alertError","useSweet","navigate","useNavigate","getProvinceData","axios","PROVINCE_DB","res","useEffect","text","companyCerUrl","memorandumUrl","authService","GeoPoint","Container","Fragment","render","field","value","rest","RadioGroup","row","Radio","inputRef","maxWidth","FormGroup","checked","error","fieldState","Input","helperText","message","minRows","multiline","AutoComplete","options","Set","PostCodeMain","onChangeAT","ProvinceThai","DistrictThai","TambonThai","MapBox","lo","placeholder","DatePicker","views","disableFuture","maxDate","disableMaskedInput","renderInput","params","Upload","val"],"sourceRoot":""}